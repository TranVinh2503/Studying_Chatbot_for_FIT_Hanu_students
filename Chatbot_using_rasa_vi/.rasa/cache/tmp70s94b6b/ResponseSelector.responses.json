{
  "utter_ask_administrative_procedures/enroll_course": [
    {
      "text": "Each semester will have an online course registration schedule for each school year. On the day the teacher announces, log in to the training management page, go to the Subject registration section, check the subjects, wait for the page to load in the task to successfully register for the subject."
    }
  ],
  "utter_ask_administrative_procedures/change_major": [
    {
      "text": "To change your major, you need to satisfy the following conditions: - Not a freshman or senior - Not subject to forced withdrawal from school or lack of prescribed study time - Obtain the consent of the faculty and the principal Then you write an application to request permission to change majors, the form is in the Hanu Connections application"
    }
  ],
  "utter_ask_administrative_procedures/apply_for_financial_aid": [
    {
      "text": "Step 1: Students submit applications and records at the website: https://hanu.connections.vn or download the HANU Connections app, log in to their personal account. Step 2: The department receives requests, checks information and processes requests directly on the software. Step 3: Students submit notarized copies of documents according to the attached documents at the Student Affairs and Business Relations Department, Room 103- Building C, contact phone: 02438544118 (Ms. Ha Thi Thuy) Time to apply and time to receive confirmation of support will depend on the year and semester."
    }
  ],
  "utter_ask_administrative_procedures/id_card": [
    {
      "text": "Currently, HANU will issue physical ID cards to students after enrolling. The cards will be distributed to class monitors. The ID card information will use the information you registered when enrolling, so you do not need to provide any documents or other information."
    }
  ],
  "utter_ask_academic_regulations/advanced_courses": [
    {
      "text": "To register for advanced courses, you must complete the prerequisite courses for each major. Information about the subjects you need to complete will be in View prerequisite subjects on the training management page https://qldt.hanu.vn/ Each semester, the subjects you are registered for will be displayed in their entirety on the subject registration date, so if the subject you want to register for is not yet available, it means you have not taken the prerequisite subject, or this subject does not belong to this semester."
    }
  ],
  "utter_ask_academic_regulations/grade": [
    {
      "text": "Grading rules will depend on the subject teacher. Most of the time the rule will be: 10% attendance score, 30% midterm exam score, 60% final exam score To pass the subject, your score needs to be at least 4.96."
    }
  ],
  "utter_ask_education_program_information_technology/major_overall": [
    {
      "text": "Name of major: Information Technology Specialization code: 7480201 Teaching language: English Training forms: formal"
    }
  ],
  "utter_ask_education_program_information_technology/major_goal": [
    {
      "text": "- Possess foundational knowledge in mathematics, information technology, Marxist-Leninist methodology, Ho Chi Minh ideology, politics, and law. - Demonstrate in-depth expertise in Software Technology, Computer and Communications Networks, and Information Systems. - Attain a proficiency level of 4 in English, as per the 6-level Foreign Language Competency Framework for Vietnam, applicable for effective communication, study, research, and professional engagements. - Exhibit strong teamwork skills, autonomy, analytical thinking, innovation, a community service orientation, and the capability to instigate and lead transformative changes in the profession. - Demonstrate the aptitude for advanced study and research within the IT industry."
    }
  ],
  "utter_ask_education_program_information_technology/job_posstion": [
    {
      "text": "- Software Product Development group: Programmer (front-end, back-end, web, and mobile); Business Analyst/User Requirements Specialist; Software Design Specialist; Testing and Quality Assurance Specialist; Project Management and Software Development Process Specialist. - Network Administration and Information Systems Deployment group: System Administration and Operations Specialist (networks, databases and services, virtualization and cloud computing); Information Security Specialist; Application Consulting and Information Systems Deployment Specialist. - Bridge engineers, technical consultants, project managers, and customer care specialists for foreign enterprises. - Researchers"
    }
  ],
  "utter_ask_education_program_information_technology/calculus_course_code": [
    {
      "text": "The course code of Calculus is xxFIT2CAL."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_prerequisite": [
    {
      "text": "No, Calculus doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_is_prerequisite_courses": [
    {
      "text": "Yes, Calculus is the prerequisite course of the following course: Probability and Statistics."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Calculus is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_number_of_credits": [
    {
      "text": "Calculus is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_number_of_credit_hours": [
    {
      "text": "Calculus is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_course_type": [
    {
      "text": "Calculus is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Thi Kim Son, email: sonntk@hanu.edu.vn - MSc Nguyen Thi Huong, email: nthuong@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/calculus_objective_of_course": [
    {
      "text": "The objective of this course is to equip learners with fundamental knowledge of algebra, calculus, and their practical applications in real-world problems. This aims to enable learners to comprehend and correctly apply problem-solving methods, establish mathematical models for efficiently addressing real-life issues with precision.\nUpon completion, students should be able to: - Explain fundamental concepts related to linear algebra and their applications. - Explain fundamental concepts related to calculus and their applications. - Solve problems in linear algebra, including matrix operations, determinants, linear systems, and vector spaces. - Perform calculations involving derivatives, limits, differentials, and integrals of functions, alongside solving real-world application problems."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_course_structure": [
    {
      "text": "1. Linear Equations and Matrix Algebra - Linear equations and matrices - Matrix operations - Inverse matrices - Matrix analysis\n2. Determinants - Introduction to determinants - Properties of determinants - Cramer's rule, cofactors, and linear transformations\n3. Vector Spaces - Vector spaces and subspaces - Null space, column space, and linear transformations - Linearly independent sets - Dimension of a vector space - Rank\n4. Orthogonality and Least Squares - Eigenvalues and eigenvectors - Diagonalization - Orthogonal sets and orthogonal projection - Gram-Schmidt process - Least squares problems\n5. Symmetric Matrices and Quadratic Forms - Diagonalization of symmetric matrices - Quadratic forms - Constrained optimization - Singular value decomposition\n6. Midterm Examination\n7. Limits and Continuity - Definition of limits for a function - Properties of limits - Indeterminate forms and limits at infinity - One-sided limits - Continuity of functions\n8. Differentiation - Derivatives and higher-order derivatives - Implicit differentiation - Related rates - Differentiation and linear approximation - L'HÃ´pital's Rule\n9. Integration and its Applications - Evaluating integrals using substitution - Integration by parts - Fundamental Theorem of Calculus - Mean value theorem and applications - Applications of integration\n10. Differential Equations - Introduction to differential equations - Modeling using differential equations - Separation of variables - First-order linear differential equations\n11. Review Session\n12. Final Examination"
    }
  ],
  "utter_ask_education_program_information_technology/calculus_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Paper-based exam): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/calculus_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/calculus_additional_reading_materials": [
    {
      "text": "Primary Materials: - David C. Lay, Steven R. Lay, Judi J. McDonald (2016), Linear Algebra and Its Applications, 5th Ed., USA: Pearson. - H. Anton, I. Bivens, S. Davis (2009), Calculus - Early Transcendentals, 9th Ed., MA, USA: John Wiley & Sons, Inc.\nReference Materials: - Larson Edwards (2006), Calculus an applied approach seventh edition, Houghton Mifflin Company in New York. - H. Anton, Chriss Rorres (2010), Elementary Linear Algebra, 11th Ed, USA: John Wiley & Sons, Inc."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_course_code": [
    {
      "text": "The course code of Discrete Mathematics is xxFIT2DMA."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_prerequisite": [
    {
      "text": "No, Discrete Mathematics doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_is_prerequisite_courses": [
    {
      "text": "Yes, Discrete Mathematics is the prerequisite course of the following course: Artificial Intelligence."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Discrete Mathematics is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_number_of_credits": [
    {
      "text": "Discrete Mathematics is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_number_of_credit_hours": [
    {
      "text": "Discrete Mathematics is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_course_type": [
    {
      "text": "Discrete Mathematics is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Ta Quang Hung, email: hta@hanu.edu.vn - MSc Nguyen Thi Huong, email: nthuong@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_objective_of_course": [
    {
      "text": "The course aims to impart fundamental knowledge of discrete mathematics, covering permutations, combinations, number theory, propositions, and graph theory, with practical applications in real-world problem-solving. Upon completion, students should: - Explain key concepts in discrete mathematics, including permutations, combinations, number theory, propositions, and graph theory. - Demonstrate an understanding of applying discrete mathematics in real-world problem-solving, such as error correction in communication, cryptography, and programming.\nAssessment Criteria: - Present counting in combinatorics. - Understand and apply logical propositions, using methods like direct proof and induction. - Comprehend basic number theory concepts, including groups, rings, fields, and modular arithmetic. - Apply graph theory in problem-solving.\nLearning Outcomes: - Solve discrete problems related to combinations, logical propositions, number theory, and graphs. - Apply discrete mathematics knowledge to real-world problems in cryptography, error correction, programming, etc."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_course_structure": [
    {
      "text": "1. Propositional Logic 2. Proof Techniques 3. Induction and Recursion 4. Set Theory 5. Modular Arithmetic 6. Number Theory 7. Polynomials 8. Midterm Exam 9. Error Correction Codes 10. Graph Theory 11. Trees 12. Guest Lecture 13. Review Session 14. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Paper-based exam/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam/ Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/discrete_mathematics_additional_reading_materials": [
    {
      "text": "Primary Materials: - Kenneth H. Rosen, (2012), Discrete Mathematics and its Applications, 7th Edition, McGraw-Hill, Inc.\nReference Materials: - Susanna S. Epp, (2010), Discrete Mathematics with Applications, 4th Edition, Brooks-Cole, Cengage-Learning."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_course_code": [
    {
      "text": "The course code of Probability and Statistics is xxFIT2PST."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_prerequisite": [
    {
      "text": "Yes, Probability and Statistics require Calculus as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_is_prerequisite_courses": [
    {
      "text": "No, Probability and Statistics is not a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Probability and Statistics is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_number_of_credits": [
    {
      "text": "Probability and Statistics is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_number_of_credit_hours": [
    {
      "text": "Probability and Statistics is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_course_type": [
    {
      "text": "Probability and Statistics is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Thi Huong, email: nthuong@hanu.edu.vn - MSc Nguyen Thi Kim Son, email: sonntk@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_objective_of_course": [
    {
      "text": "Course Objectives: The course aims to provide learners with fundamental knowledge in Probability Theory and Statistics. Upon completion, learners should have a foundational understanding of probability theory and the ability to apply it to solve real-world problems. They should also comprehend basic statistical concepts, know how to detect and summarize essential features of sample data, conduct general statistical inferences based on sample data, and apply statistics to real-world problems.\nAssessment Criteria: - Present fundamental knowledge of probability theory, including random events, probability, probability distribution laws, and the law of large numbers. - Present the theoretical foundations of sampling and related concepts. - Explain statistical inference methods based on sample data and statistical hypothesis testing.\nLearning Outcomes: - Identify and summarize basic features of sample data. - Perform statistical inference on sample mean, sample frequency, and sample variance. - Estimate parameters in statistical inference. - Conduct statistical hypothesis testing using both parametric and non-parametric methods."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_course_structure": [
    {
      "text": "1. Introduction - Counting and Sets\n2. Foundations of Probability - Conditional Probability - Bayes' Theorem\n3. Random Variables - Discrete Random Variables - Expectation - Variance of Discrete Random Variables - Continuous Random Variables\n4. Law of Large Numbers - Expectation, Variance, and Standard Deviation of Continuous Random Variables - Central Limit Theorem - Law of Large Numbers\n5. Midterm Exam\n6. Sampling and Sample Distribution\n7. Estimation\n8. Statistical Hypothesis Testing\n9. Linear Regression and Correlation\n10. Review\n11. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Paper-based exam/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam/ Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/probability_and_statistics_additional_reading_materials": [
    {
      "text": "Primary Materials: - Ronald E. Walpole et. al, (2012), Probability and Statistics for Engineers and Scientists, 9th Edition, Prentice Hall.\nReference Materials: - Morris H. Degroot, Mark J. Schervish, (2013), Probability and Statistics, 4th Edition, Pearson. -\tDavid S. Moore, George P. McCabe, (2011), Introduction to the Practice of Statistics, Wiley."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_course_code": [
    {
      "text": "The course code of Scientific research methodology is xxFIT2SRM."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_prerequisite": [
    {
      "text": "No, Scientific research methodology doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_is_prerequisite_courses": [
    {
      "text": "No, Scientific research methodology is not a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Scientific research methodology is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_number_of_credits": [
    {
      "text": "Scientific research methodology is equivalent to 2 credits."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_number_of_credit_hours": [
    {
      "text": "Scientific research methodology is delivered over 100 credit hours, comprising 30 hours of theoretical instruction, and 70 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_course_type": [
    {
      "text": "Scientific research methodology is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Nguyen Xuan Thang, email: nxthang@hanu.edu.vn - PhD Phung Van Dong, email: dongpv@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_objective_of_course": [
    {
      "text": "Course Objectives: The course aims to provide learners with knowledge related to research methodology. This helps learners begin to develop research skills such as selecting topics, identifying research subjects and questions, applying appropriate research methods, and writing reports to present research results.\nAssessment Criteria: - Explain basic theories of scientific research and research methods. - Present the stages of conducting a scientific research project. - Describe the method of publishing results and evaluating a scientific research project.\nLearning Outcomes: - Develop a research outline. - Plan and organize the implementation of a scientific research project. - Write a report to present research results.\nSoft Skills Development: - Develop logical and objective thinking when examining and evaluating practical issues. - Cultivate a serious and objective attitude in scientific research activities. - Consciously enhance specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_course_structure": [
    {
      "text": "1. Introduction 2. Research Design 3. Literature Review 4. Research Methods 5. Data Types and Data Collection Methods 6. Midterm Exam 7. Data Analysis: Qualitative and Quantitative Methods 8. Scientific Writing 9. Presentation of Results 10. Scientific Critique 11. Ethical Issues 13. Review 14. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Summarize and evaluate. - Propose and advise on topic selection. - Suggest structure, length, and presentation format. - Provide materials and guide literature search. - Guide student discussions. - Comment, summarize issues, and facilitate discussions. - Advise on selecting situations/problems for research. - Provide materials, guide literature search, and data collection. - Advise on research methods. - Comment, evaluate, and conclude.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Choose a research topic. - Search and conduct independent literature research. - Prepare presentation materials. - Present and answer questions. - Participate in discussions. - Approach situations, pose problems. - Gather, process, and analyze literature and data. - Ask questions, seek guidance. - Debate, explore, propose solutions. - Report research results."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Explore and present a research topic in the field of Information Technology. - Weight: 10% - Compose an overview for a proposed research on a chosen topic in the field of Information Technology. - Weight: 15% - Provide feedback and comments on the research proposals of two fellow students in the class. - Weigth: 15%\nEnd-of-Course Assessment: - Complete assigned project. - Weight: 50%"
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/scientific_research_methodology_additional_reading_materials": [
    {
      "text": "Primary Materials: - John W. Creswell, (2013), Research Design: Qualitative, Quantitative, and Mixed Methods Approaches, 4th Edition, SAGE Publications, Inc.\nReference Materials: - J. Zobel (1997), Writing for Computer Science, Springer-Verlag. - Apirak Hoonlor, et al., (2013), Trends in Computer Science Research, Communications of the ACM, Volume 56 Issue 10. - Allen Newell, Herbert A. Simon, (1976), Computer Science as Empirical Inquiry: Symbols and Search, Communications of the ACM, Volume 19 Issue 3."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_course_code": [
    {
      "text": "The course code of Principles of Computers is xxFIT2PCO."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_prerequisite": [
    {
      "text": "No, Principles of Computers doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_is_prerequisite_courses": [
    {
      "text": "Yes, Principles of Computers prerequisite course of Embeded System."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Principles of Computers is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_number_of_credits": [
    {
      "text": "Principles of Computers is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_number_of_credit_hours": [
    {
      "text": "Principles of Computers is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_course_type": [
    {
      "text": "Principles of Computers is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Do Thi Phuong Thao, email: thaodttp_fit@hanu.edu.vn - MSc Tran Nguyen Khanh, email: khanhtn@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_objective_of_course": [
    {
      "text": "Objective of the Course: Equip learners with fundamental knowledge of computers, computer systems, and their applications in the field of information technology. This includes understanding the operations, deployment, and applications of various information technology services in daily life.\nKnowledge and Skills: - Describe the operations, deployment, and applications of typical information technology services. - Explain the applied roles of information technology. - Present the significance of professional ethics in the field of information technology.\nSkills and Competencies: - Differentiate between various types of computers, computer systems, and information technology services. - Utilize basic computers and information technology services. - Deploy basic information technology services."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_course_structure": [
    {
      "text": "1. Course Orientation 2. Introduction to Computers and Hardware - Computer concepts - Components of a computer - Applications of computers - Computer networks and the Internet - Computer software - Computer classification 3. Software - Software classification - Software functions - Operating systems and application software - User interfaces - Commercial applications - Multimedia graphic applications - Personal applications - Web applications 4. Storage - Storage classification and devices - Hard drives - Flash memory cards - Cloud services 5. Data Representation - Data representation on computers - Number systems - Data format conversion - Binary system operations 6. Input/Output - Concept - Input devices - Output devices 7. Operating Systems and Application Software - Software classification - Operating system concepts - Operating principles - Server and personal computer operating systems - Some application software 8. Information Systems and Programming Languages - Introduction to computer information systems - Programming languages - Software development steps 9. Midterm Exam 10. Computer Networks and Communication - Computer network concepts and applications - Computer network classification - Computer network architecture and protocols 11. Internet Networks and HTML Language - Internet network concepts and history - Internet services - Introduction to HTML language 12. Databases - Concepts - Database management systems - Database applications and management systems - Introduction to SQL query language 13. Computer Security - Computer security risks and threats - Computer and network attack methods - Precautionary measures - Professional ethics in computer science 14. Enterprise Information Systems - Concepts - Hardware and software architecture - Relevant issues 15. Review 16. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Midterm Exam (Team-work project/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam/ Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_computers_additional_reading_materials": [
    {
      "text": "Primary Materials: - Peter Norton's Introduction to Computers (6th Edition) - Gary B. Shelly (2012), Discovering Computer: Your Interactive Guide to the Digital World, Cengage Learning\nReference Materials: - Michael J. Quinn (2015), Ethics for the information age, Pearson."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_course_code": [
    {
      "text": "The course code of Project Management is xxFIT2PMA."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_prerequisite": [
    {
      "text": "No, Project Management doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_is_prerequisite_courses": [
    {
      "text": "Yes, Project Management prerequisite course of Software Project Management."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Project Management is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_number_of_credits": [
    {
      "text": "Project Management is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_number_of_credit_hours": [
    {
      "text": "Project Management is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_course_type": [
    {
      "text": "Project Management is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Vu Minh Tuan, email: minhtuan_fit@hanu.edu.vn - MSc Nguyen Thuy Linh, email: linhthuy@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/project_management_objective_of_course": [
    {
      "text": "Course Objective: Information Technology Project Management The goal of this course is to equip learners with knowledge and skills related to project management activities and practical applications in IT project management. In terms of knowledge, the course provides learners with concepts, processes, and requirements of project management; an integrated approach to project management; establishing project scope; and addressing issues related to time, cost, quality, and risk management. In terms of skills, learners will be equipped with basic project management skills, such as defining scope, estimating resources, managing resources and changes, and handling project risks. The practical content of the course aims to provide learners with the skills to use fundamental project management tools to manage a specific IT project.\nKnowledge: - Explain basic concepts of project management such as scope, time, cost, quality, human resources, communication, risk, integration, and procurement. - Present real-world models of project management. - Enumerate key tools supporting project management and describe their functionalities.\nSkills: - Manage projects using an integrated project management approach. - Utilize basic project management support tools.\nAutonomy and Responsibility Skills: - Understand the role of project management in the IT industry. - Demonstrate a commitment to improving professional knowledge related to the course. - Develop a serious and objective attitude in professional activities."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_course_structure": [
    {
      "text": "1. Introduction 2. Project Management Process Group 3. Integrated Project Management 4. Project Scope Management 5. Project Time Management 6. Project Cost Management 7. Project Quality Management 8. Midterm Exam 9. Project Human Resource Management 10. Project Communications Management 11. Project Risk Management 12. Project Procurement Management 13. Review 14. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/project_management_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Midterm Exam (Team-work project/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam/ Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/project_management_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/project_management_additional_reading_materials": [
    {
      "text": "Primary Materials: - Kathy Schwalbe. (2014). Information Technology Project Management (7th edition). US: Cengage Learning.\nReference Materials: - http://www.cengage.com/cgi-wadsworth/course_products_wp.pl?fid=M20b&product_isbn_issn=9781133526858&token"
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_course_code": [
    {
      "text": "The course code of Programming 1 is xxFIT2PMA."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_prerequisite": [
    {
      "text": "No, Programming 1 doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_is_prerequisite_courses": [
    {
      "text": "Yes, Programming 1 prerequisite course of Programming 2, Web Programming, and Mobile Programming."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Programming 1 is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_number_of_credits": [
    {
      "text": "Programming 1 is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_number_of_credit_hours": [
    {
      "text": "Programming 1 is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_course_type": [
    {
      "text": "Programming 1 is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Van Cong, email: congnv@hanu.edu.vn - MSc Dang Dinh Quan, email: quandd@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_objective_of_course": [
    {
      "text": "The objective of the course is to provide learners with fundamental knowledge related to programming and software development, covering concepts such as program structure and basic components, programming language, and the programming process as a problem-solving cycle. This aims to help learners develop skills in constructing basic program statements and structures, applying function-oriented design techniques for program development.\nKnowledge: - Present basic concepts of programs and programming. - Explain the rules of using variables, simple data types, control statements, procedures, and program libraries. - Explain the principles of representing functions as procedures and design programs in a procedural-oriented manner.\nSkills: - Use variables, simple data types, and organize control statements within a program. - Design simple procedural-oriented programs. - Use tools for source code editing, compile, and execute programs."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_course_structure": [
    {
      "text": "1. Introduction: - Introduction to the course. - Overview of the concept of software programming. - Definition of software programs, basic software, and programming languages. - Software programming cycle (problem-solving). - Definition and role of algorithms.\n2. Basic Programming: - Fundamentals of programming in the Java language. - Operators and expressions, applied to programming arithmetic operations.\n3. Functions: - Functions, procedures, and program controls. - Recursive functions.\n4. Midterm Exam\n5. Fundamentals of Program Design: - Program design in the form of functions and applications.\n6. Structured Data Types and Basic Algorithms: - Arrays, strings, enumeration types. - Some basic algorithms (search algorithms).\n7. Review\n8. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Midterm Exam (Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/programming_1_additional_reading_materials": [
    {
      "text": "Primary Materials: - David J. Eck. (2014). Introduction to Programming Using Java (7th Edition). Hobart and William Smith Colleges. Retrieved from http://math.hws.edu/javanotes/\nReference Materials: - Sedgewick, R., & Wayne, K. (2017). Introduction to Programming in Java: An Interdisciplinary Approach (2nd Edition). Addison-Wesley Professional"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_course_code": [
    {
      "text": "The course code of Principles of Operating Systems is xxFIT2POP."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_prerequisite": [
    {
      "text": "No, Principles of Operating Systems doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_is_prerequisite_courses": [
    {
      "text": "No, Principles of Operating Systems is not a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Principles of Operating Systems is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_number_of_credits": [
    {
      "text": "Principles of Operating Systems is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_number_of_credit_hours": [
    {
      "text": "Principles of Operating Systems is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_course_type": [
    {
      "text": "Principles of Operating Systems is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Do Thi Phuong Thao, email: thaodtp_fit@hanu.edu.vn - MSc Nguyen Tran Dinh Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_objective_of_course": [
    {
      "text": "The objectives of the course are to equip learners with fundamental knowledge about computer operating systems, including concepts, architecture, and principles of operating systems. It covers various aspects such as process management, memory management, data management, and program execution. The goal is to enable learners to understand and use computer operating systems effectively and make informed choices when evaluating and selecting appropriate operating systems.\nKnowledge: - Explain basic concepts of operating systems and the principles of their operation. - Differentiate between the architectures of operating systems. - Explain issues related to operating systems such as process management, memory management, data management, etc.\nSkills: - Install common computer operating systems. - Solve basic problems related to computer operating systems. - Choose the appropriate operating system for specific situations."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_course_structure": [
    {
      "text": "1. Chapter 1: Introduction - Section 1: The role of Operating Systems - Section 2: Computer Organization - Section 3: Computer Architecture - Section 4: Operating System Structure - Section 5: Operating System Operations - Section 6: Process Management - Section 7: Memory Management - Section 8: Storage Management - Section 9: Security - Section 10: Computational Environment - Section 11: Open Source Operating Systems\n2. Chapter 2: Structure - Section 1: Operating System Services - Section 2: Interaction with Users - Section 3: System Calls - Section 4: Types of System Calls - Section 5: System Programs - Section 6: Operating System Design and Implementation - Section 7: System Boot\n3. Chapter 3: Processes - Section 1: Concepts - Section 2: Process Scheduling - Section 3: Process Operation - Section 4: Interprocess Communication - Section 5: IPC Examples - Section 6: Communication in Client-Server Systems\n4. Chapter 4: Threads - Section 1: Concepts - Section 2: Multicore Programming - Section 3: Multithreading Models - Section 4: Thread Libraries - Section 5: Implicit Threading - Section 6: Other Issues - Section 7: Operating System Examples\n5. Chapter 5: CPU Scheduling - Section 1: Principles - Section 2: Scheduling Principles - Section 3: Scheduling Algorithms - Section 4: Thread Scheduling - Section 5: Multiprocessor Scheduling - Section 6: Real-Time CPU Scheduling - Section 7: Examples - Section 8: Algorithm Evaluation\n6. Chapter 6: Deadlocks - Section 1: System Model - Section 2: Characteristics - Section 3: Deadlock Handling\n7. Chapter 7: Main Memory - Section 1: Introduction - Section 2: Swapping - Section 3: Address Binding - Section 4: Segmentation - Section 5: Paging - Section 6: Examples\n8. Chapter 8: Virtual Memory - Section 1: Introduction - Section 2: Demand Paging - Section 3: Copy on Write - Section 4: Page Replacement - Section 5: Address Translation Lookaside Buffers (TLBs) - Section 6: Memory Mapping - Section 7: Other Issues - Section 8: Examples\n9. Midterm Exam\n10. Chapter 9: Storage Structure - Section 1: Introduction - Section 2: Hard Disk Structure - Section 3: Disk Attachment - Section 4: Scheduling - Section 5: Disk Management - Section 6: Other Issues\n11. Chapter 10: File Management - Section 1: Principles - Section 2: Access Methods - Section 3: Access Control and Security - Section 4: File System Implementation - Section 5: File Sharing - Section 6: Data Protection\n12. Chapter 11: File System Implementation - Section 1: File System Structure - Section 2: File System Implementation - Section 3: Directory Implementation - Section 4: Allocation Methods - Section 5: Free Space Management - Section 6: Efficiency and Performance - Section 7: File System Recovery - Section 8: Network File System (NFS) Example\n13. Chapter 12: I/O Systems - Section 1: Introduction - Section 2: Hardware - Section 3: Interfaces - Section 4: I/O System Architecture - Section 5: Interaction with Hardware Devices - Section 6: Threads - Section 7: Performance\n14. Chapter 13: Security - Section 1: Introduction - Section 2: OS Security Threats - Section 3: User Authentication - Section 4: Firewall Configuration - Section 5: Types of OS Security Threats - Section 6: Example: Windows 7\n15. Chapter 14: Virtualization - Section 1: Introduction - Section 2: History - Section 3: Applications - Section 4: Virtual Machine Architecture - Section 5: Types of Virtual Machines - Section 6: Virtualization and OS Virtualization - Section 7: Examples\n16. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Midterm Exam (Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/principles_of_operating_systems_additional_reading_materials": [
    {
      "text": "Primary Materials: - Silberschatz & Galvin, P.B & Gagne, G. 2013. Operating System Concepts (9th Editions). John Wiley and Sons.\nReference Materials: - Pertersen, R. (2009). Ubuntu: The Complete Reference. McGraw-Hill. - Silberschatz, A., & Galvin, P.B., & Gagne, G. (2013). Operating System Concepts with JAVA (8th Editions). John Wiley and Sons. - Fox, R. (2014). LINUX with Operating System Concepts. . CRC Express."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_course_code": [
    {
      "text": "The course code of Data structures and algorithms is xxFIT2DSA."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_prerequisite": [
    {
      "text": "No, Data structures and algorithms doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_is_prerequisite_courses": [
    {
      "text": "Yes, Data structures and algorithms prerequisite course of Artificial Intellegence."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Data structures and algorithms is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_number_of_credits": [
    {
      "text": "Data structures and algorithms is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_number_of_credit_hours": [
    {
      "text": "Data structures and algorithms is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_course_type": [
    {
      "text": "Data structures and algorithms is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Do Thuy Duong, email: duongdt@hanu.edu.vn - MSc Le Hoang Nam, email: namlh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_objective_of_course": [
    {
      "text": "The objective of the course is to equip learners with fundamental knowledge of algorithms, data structures, and their real-world applications. This will enable students to understand and apply algorithms and data structures correctly, evaluate and choose suitable algorithms or data structures, and design and implement algorithms or data structures using the Java programming language for educational, research, and practical purposes.\nKnowledge: - Present basic concepts of algorithms and their applications. - Present basic concepts of data structures and their applications. - Explain fundamental concepts and methods for analyzing and evaluating the performance of algorithms and data structures. - Explain the principles of operation of some basic algorithms and data structures such as search algorithms, sorting algorithms, hash tables, graph traversal, data structure lists, stacks, queues, trees, and graphs.\nSkills: - Implement algorithms and data structures introduced in the course using the Java programming language. - Practice performance evaluation, selecting appropriate algorithms or data structures to solve specific problems."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Algorithms - Data Structures\n2. Algorithm Analysis - Algorithm complexity - Time complexity and different cases - Computational complexity and Big-O notation\n3. Sorting Algorithms - Selection sort, Insertion sort, Bubble sort - Merge sort, Heap sort, Quick sort - Linear sorting algorithms\n4. Lists - Introduction - Implementation - Applications\n5. Stack and Queue - Introduction - Implementation - Applications - Search algorithms and Hash table\n6. Midterm Exam\n7. Trees - Introduction - Implementation - Representation and evaluating expressions using tree data structures - Binary search trees\n8. Graphs - Graph representation - Graph algorithms and applications\n9. Algorithm Design - Top-down and bottom-up approaches - Algorithm design optimization (Recursion, Greedy, Divide and Conquer) - Dynamic programming\n10. Guest Lecture\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Midterm Exam (Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/data_structures_and_algorithms_additional_reading_materials": [
    {
      "text": "Primary Materials: - Mark Allen Weiss (2012), Data structures and algorithm analysis in Java, 3rd edition, Pearson.\nReference Materials: - Thomas H. Cormen, et all (2009), Introduction to Algorithms, 3rd edition, MIT Press."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_course_code": [
    {
      "text": "The course code of Computer networks is xxFIT2CNE."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_prerequisite": [
    {
      "text": "Yes, Computer networks requires Principles of Computers as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_is_prerequisite_courses": [
    {
      "text": "No, Computer networks isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Computer networks is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_number_of_credits": [
    {
      "text": "Computer networks is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_number_of_credit_hours": [
    {
      "text": "Computer networks is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_course_type": [
    {
      "text": "Computer networks is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Do Thi Phuong Thao, email: thaodtp_fit@hanu.edu.vn - MSc Tran Nguyen Khanh, email: khanhtn@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_objective_of_course": [
    {
      "text": "These objectives aim to provide learners with foundational knowledge and skills in computer networking, enabling them to design, configure, and manage computer networks within specific organizational contexts.\nKnowledge: - Present fundamental concepts in computer networking such as network architecture, network devices, cable standards, routing, and IP address management. - Differentiate components within network architecture and understand their respective roles. - Explain the operating principles of basic network models and protocols. - Distinguish applications and services deployed on the network infrastructure, including DNS, Web, Email, and FTP services.\nSkills: - Design an internal computer network for an organization. - Install and configure servers providing network services like DNS, Web, Mail, and FTP. - Evaluate and address common issues related to network administration."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_course_structure": [
    {
      "text": "Chapter 1: Introduction to Course Content and Definition, Historical Development of Computer Networks - Overview of the course content. - Definition and historical development of computer networks.\nChapter 2: Introduction to Components and Network Devices - Exploring the various components and devices within a computer network.\nChapter 3: Introduction to Layered Network Models - Section 1: Introduction to the OSI model. - Section 2: Introduction to the TCP/IP model.\nChapter 4: Introduction to Physical Layer and Data Transmission - Understanding the physical layer and data transmission in computer networks.\nChapter 5: Introduction to Network Layer and IP Addressing - Overview of the network layer and various IP addressing schemes.\nChapter 6: Introduction, Comparison, and Deployment of IPv4 and IPv6 - Comparing and deploying IPv4 and IPv6 in network environments.\nChapter 7: Introduction to Routing and Routers - Understanding routing principles and the role of routers in computer networks.\nChapter 8: Introduction to Transport Layer: TCP and UDP - Overview of the transport layer, focusing on TCP and UDP.\nChapter 9: Introduction to Application Layer and Common Applications - Overview of the application layer and popular applications like DNS, HTTP, email, DHCP, NFS, SNMP.\nChapter 10: Introduction to Network Operating Systems - Understanding different network operating systems.\nChapter 11: Network Management - Exploring network management principles and practices.\nChapter 12: Next-Generation Networks (NGN) - Understanding the concepts and features of Next-Generation Networks.\nChapter 13: Review - Comprehensive review of the course content.\nChapter 14: Final Exam - Assessment covering all aspects of the course."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Midterm Exam (Practice): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/computer_networks_additional_reading_materials": [
    {
      "text": "Primary Materials: - Andrew S. Tanenbaum (2003), Computer Networks, 4th edition. Prentice Hall.\nReference Materials: -\tCharles M. Kozierok (2005) TCP/IP Guide. No Starch Press. - Todd Lammle (2013) CCNAÂ® Routing and Switching Study Guide. Online: https://www.freeccnastudyguide.com/study-guides/ccna"
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_course_code": [
    {
      "text": "The course code of Special Subject 1 is xxFIT3SS1."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_prerequisite": [
    {
      "text": "No, Special Subject 1 doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_is_prerequisite_courses": [
    {
      "text": "Yes, Special Subject 1 is prerequisite course of Special subject 2."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Special Subject 1 is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_number_of_credits": [
    {
      "text": "Special Subject 1 is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_number_of_credit_hours": [
    {
      "text": "Special Subject 1 is delivered over 150 credit hours, comprising 15 hours of theoretical instruction, 60 hours of practical application, and 75 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_course_type": [
    {
      "text": "Special Subject 1 is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Ta Quang Hung, email: hta@hanu.edu.vn - PhD Nguyen Xuan Thang, email: nxthang@hanu.edu.vn - MSc Do Thi Phuong Thao, email: thaodtp_fit@hanu.edu.vn - MSc Vu Minh Tuan, email: tuanvm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_objective_of_course": [
    {
      "text": "This course adopts a problem-based teaching method, introducing selected topics in the field of information technology and modern telecommunications. The curriculum focuses on conducting an overview, analysis, and evaluation of technological solutions, programming techniques, or basic theoretical research in a specific area within the field. Real-world issues related to the chosen topics are presented as projects and discussed throughout the learning process. The specific content of the course varies depending on the selected theme.\nObjectives: The primary objectives of this course are to equip students with fundamental knowledge related to the chosen topic. This enables students to understand and apply appropriate technological and technical solutions to solve specific real-world problems.\nKnowledge: - Present and explain basic knowledge related to the chosen topic. - Differentiate issues and relevant technological solutions and techniques related to the chosen topic.\nSkills: - Practice selecting and applying suitable solutions to address real-world problems. - Practice soft skills such as presentation, academic critique, report writing, leadership, and teamwork.\nAutonomy and Responsibility Competencies: - Develop awareness to enhance specialized knowledge related to the course. - Formulate logical and objective thinking when examining and evaluating specialized issues. - Cultivate a serious and professional attitude in specialized activities.\nThe course emphasizes not only technical skills but also soft skills and a sense of responsibility, fostering a well-rounded and capable individual in the field of information technology and telecommunications."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_course_structure": [
    {
      "text": "1. Introduction: - Overview of the Course - Introduction to the Selected Topic - Trends in Development and Applications\n2.Group Work (Stage 1): Collaborative activities related to the initial stages of the chosen topic.\n3. Midterm Report: Submission and presentation of midterm progress and findings.\n4. Group Work (Stage 2): Continued collaborative efforts in the later stages of the selected topic.\n5. Final Results Presentation: Reporting and presenting the final outcomes and results."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Choose appropriate reading materials related to the topic, with supplementary explanations provided in class. - Guide the reading process, creating motivation, and encouraging students to invest time in reading and processing information. - Conduct regular checks and evaluations of students' activities, including reviewing and providing feedback on assignments. - Offer constructive feedback to enhance individual and group performance. - Present issues and perspectives related to the chosen topic. - Introduce relevant viewpoints to stimulate critical thinking. - Propose and suggest potential research topics. - Provide guidance on how to choose suitable topics aligned with the course objectives. - Assign and guide the structuring, length, and format of presentations. - Organize discussions to facilitate collaborative learning. - Organize group discussions to encourage knowledge sharing. - Offer insights and observations during discussions. - Present a problem statement related to the topic. - Facilitate structured discussions, encouraging critical analysis and conclusions. - Divide students into groups and assign projects. - Clearly define preparation and presentation timelines for each group. - Monitor project progress and provide support when needed. - Ensure adherence to project timelines. - Listen attentively to project presentations. - Pose relevant questions to stimulate further discussion. - Summarize key points and evaluate the overall quality of presentations. - Provide constructive feedback for continuous improvement. - Conclude the session with a reflection on the learning process. - Encourage students to assess their individual and group performance.\nStudents: - Deliver presentations confidently and respond to questions from both instructors and peers. - Actively participate in discussions, providing comments, and posing relevant questions. - Read assigned materials independently and express opinions according to guidelines and instructor requirements. - Document and organize materials for future reference. - Approach problems critically. - Engage in debates and discussions to deepen understanding. - Choose research topics wisely. - Conduct thorough literature reviews and prepare well-researched presentations. - Prepare thoroughly for presentations, including writing, practicing, and defending findings in front of the class. - Respond to inquiries and feedback effectively. - Actively participate in class discussions by asking questions and providing thoughtful comments. - Engage in constructive dialogue with both instructors and peers. - Keep records of relevant materials for personal and group reference. - Ensure easy access to documents for future use. - Collaborate effectively within assigned groups. - Accept and distribute tasks within the group for the successful completion of projects. - Collect and analyze information for assigned projects. - Contribute to the development of project outcomes. - Present project results and personal opinions clearly. - Reflect on feedback from both instructors and peers. - Accept assigned tasks and work collaboratively within the group. - Contribute to the overall success of the group project."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Regular report (Personal or team-work): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Report): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_1_additional_reading_materials": [
    {
      "text": "The instructor provides materials and learning resources for each specific topic."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_course_code": [
    {
      "text": "The course code of Special Subject 2 is xxFIT3SS2."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_prerequisite": [
    {
      "text": "Yes, Special Subject 2 requires Special Subject 1 as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_is_prerequisite_courses": [
    {
      "text": "No, Special Subject 2 isn't a prerequisite course ."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Special Subject 2 is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_number_of_credits": [
    {
      "text": "Special Subject 2 is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_number_of_credit_hours": [
    {
      "text": "Special Subject 2 is delivered over 150 credit hours, comprising 15 hours of theoretical instruction, 60 hours of practical application, and 75 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_course_type": [
    {
      "text": "Special Subject 2 is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Ta Quang Hung, email: hta@hanu.edu.vn - PhD Nguyen Xuan Thang, email: nxthang@hanu.edu.vn - MSc Do Thi Phuong Thao, email: thaodtp_fit@hanu.edu.vn - MSc Vu Minh Tuan, email: tuanvm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_objective_of_course": [
    {
      "text": "This is the next course after Specialized Topics 1, utilizing a problem-based teaching method. The course introduces selected and advanced topics in the field of information technology and modern communication. The topics may be extensions or enhancements of those covered in Specialized Topics 1. The content of each topic relates to researching, analyzing, and evaluating technological and theoretical solutions in a specific area within the field of information technology and communication. Practical issues are presented as topics and discussed throughout the course. The specific content of the course varies depending on the chosen topic, which may belong to areas such as artificial intelligence, big data processing, the Internet of Things, information security, information systems, software frameworks, or applying IT and communication technology to solve real-world problems.\nThe goal of the course is to equip learners with advanced knowledge in the chosen topic, enabling them to understand and apply suitable technological solutions and techniques to solve specific real-world problems.\nKnowledge: - Present basic and advanced knowledge on the chosen topic. - Analyze and evaluate issues and technological solutions related to the chosen topic.\nSkills: - Practice selecting and implementing appropriate solutions to solve real-world problems. - Practice soft skills such as presentation, academic critique, report writing, leadership, and teamwork.\nSelf-directed responsibility: - Demonstrate awareness of continuously improving relevant domain knowledge. - Develop logical and objective thinking when examining and evaluating professional issues. - Cultivate a serious and professional attitude in professional activities."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_course_structure": [
    {
      "text": "1. Introduction: - Overview of the Course - Introduction to the Selected Topic - Trends in Development and Applications\n2.Group Work (Stage 1): Collaborative activities related to the initial stages of the chosen topic.\n3. Midterm Report: Submission and presentation of midterm progress and findings.\n4. Group Work (Stage 2): Continued collaborative efforts in the later stages of the selected topic.\n5. Final Results Presentation: Reporting and presenting the final outcomes and results."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Choose appropriate reading materials related to the topic, with supplementary explanations provided in class. - Guide the reading process, creating motivation, and encouraging students to invest time in reading and processing information. - Conduct regular checks and evaluations of students' activities, including reviewing and providing feedback on assignments. - Offer constructive feedback to enhance individual and group performance. - Present issues and perspectives related to the chosen topic. - Introduce relevant viewpoints to stimulate critical thinking. - Propose and suggest potential research topics. - Provide guidance on how to choose suitable topics aligned with the course objectives. - Assign and guide the structuring, length, and format of presentations. - Organize discussions to facilitate collaborative learning. - Organize group discussions to encourage knowledge sharing. - Offer insights and observations during discussions. - Present a problem statement related to the topic. - Facilitate structured discussions, encouraging critical analysis and conclusions. - Divide students into groups and assign projects. - Clearly define preparation and presentation timelines for each group. - Monitor project progress and provide support when needed. - Ensure adherence to project timelines. - Listen attentively to project presentations. - Pose relevant questions to stimulate further discussion. - Summarize key points and evaluate the overall quality of presentations. - Provide constructive feedback for continuous improvement. - Conclude the session with a reflection on the learning process. - Encourage students to assess their individual and group performance.\nStudents: - Deliver presentations confidently and respond to questions from both instructors and peers. - Actively participate in discussions, providing comments, and posing relevant questions. - Read assigned materials independently and express opinions according to guidelines and instructor requirements. - Document and organize materials for future reference. - Approach problems critically. - Engage in debates and discussions to deepen understanding. - Choose research topics wisely. - Conduct thorough literature reviews and prepare well-researched presentations. - Prepare thoroughly for presentations, including writing, practicing, and defending findings in front of the class. - Respond to inquiries and feedback effectively. - Actively participate in class discussions by asking questions and providing thoughtful comments. - Engage in constructive dialogue with both instructors and peers. - Keep records of relevant materials for personal and group reference. - Ensure easy access to documents for future use. - Collaborate effectively within assigned groups. - Accept and distribute tasks within the group for the successful completion of projects. - Collect and analyze information for assigned projects. - Contribute to the development of project outcomes. - Present project results and personal opinions clearly. - Reflect on feedback from both instructors and peers. - Accept assigned tasks and work collaboratively within the group. - Contribute to the overall success of the group project."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Checking the results of tasks. - Weight: 10% - Regular report (Personal or team-work): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Report): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/special_subject_2_additional_reading_materials": [
    {
      "text": "The instructor provides materials and learning resources for each specific topic."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_course_code": [
    {
      "text": "The course code of Artificial Intellegence is xxFIT3AIN."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_prerequisite": [
    {
      "text": "Yes, Artificial Intellegence requires Data structures and algorithms & Discrete Mathematics as prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_is_prerequisite_courses": [
    {
      "text": "No, Artificial Intellegence isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Artificial Intellegence is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_number_of_credits": [
    {
      "text": "Artificial Intellegence is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_number_of_credit_hours": [
    {
      "text": "Artificial Intellegence is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_course_type": [
    {
      "text": "Artificial Intellegence is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Bui Quoc Khanh, email: khanhbq@hanu.edu.vn - MSc Do Thuy Duong, email: duongdt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_objective_of_course": [
    {
      "text": "The objective of the course is to equip learners with fundamental knowledge of artificial intelligence and its practical applications. This will enable learners to understand and apply basic artificial intelligence algorithms, design and deploy a simple intelligent system for educational, research, or work purposes.\nKnowledge: - Explain basic concepts of artificial intelligence and intelligent systems. - Present some fundamental concepts and algorithms that enable computers to play games and plan activities. - Explain some basic concepts, principles, and algorithms that aid computers in self-learning.\nSkills: - Represent a problem to be solved in a state space and design a suitable heuristic search algorithm to solve the problem. - Practice designing and deploying a simple intelligent system.\nSelf-directed responsibility: - Recognize the role of artificial intelligence and ethical requirements in the field of artificial intelligence."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Overview of Artificial Intelligence (AI) - Applications and development trends of AI\n2. Problem Solving using Search Methods - Search space - Search strategies - Characteristics of search problems\n3. Heuristic Search - Principles - A* algorithm - Greedy search algorithm - Hill-climbing algorithm - Simulated annealing algorithm\n4. Games - Principles - Minimax algorithm - Alpha-beta pruning algorithm\n5. Planning - Principles - Linear planning algorithm - Non-linear planning algorithm - Discussion\n6. Midterm Exam\n7. Knowledge Representation and Inference - Principles - Propositional logic - Predicate logic - Rule-based systems\n8. Fuzzy Logic - Bayesian networks - Hidden Markov models\n9. Introduction to Machine Learning - Principles - Supervised learning - Unsupervised learning\n10. Guest Lecture - Applications and real-world issues of AI\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical exercise): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper-based exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/artificial_intelligence_additional_reading_materials": [
    {
      "text": "Primary Materials: - S. Russell, P. Norvig (2013), Artificial Intelligence: A Modern Approach, 3rd edition, Pearson.\nReference Materials: - T. Hastie, et all (2015), The Elements of Statistical Learning: Data Mining, Inference, and Prediction., 2nd edition, MIT Press"
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_course_code": [
    {
      "text": "The course code of Embeded system is xxFIT2ESY."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_prerequisite": [
    {
      "text": "Yes, Embeded system requires Principles of computers as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_is_prerequisite_courses": [
    {
      "text": "No, Embeded system isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Embeded system is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_number_of_credits": [
    {
      "text": "Embeded system is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_number_of_credit_hours": [
    {
      "text": "Embeded system is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_course_type": [
    {
      "text": "Embeded system is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Ta Quang Hung, email: hta@hanu.edu.vn - MSc Bui Quoc Khanh, email: khanhbq@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_objective_of_course": [
    {
      "text": "Course Objectives: The objective of the course is to equip learners with fundamental knowledge of embedded systems and their practical applications. This will enable learners to understand and acquire the skills to design and build embedded systems for educational, research, and professional purposes.\nKnowledge: - Present basic concepts of embedded systems and their applications. - Explain the components and roles of each part in an embedded system. - Describe the steps involved in designing, constructing, and developing an embedded system. - Present information about ARM processors and their instruction sets.\nSkills: - Practice constructing a schematic diagram of a basic embedded system. - Demonstrate practical programming and deployment of embedded applications to meet real-world requirements."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Introduction to embedded systems - Applications and development trends of embedded systems\n2. Design Cycle - Planning - Requirement determination - Consideration of options\n3. Cortex M3/M4 Processor - Architecture - Operational model - Instruction set\n4. Processor Programming - Programming model - Development tools - KEIL-MDK-5 - Source code writing process\n5. Working with Memory, Clock, and Buses - Memory and memory mapping - Bus protocols and interfaces - Data transmission - Clock handling\n6. Midterm Exam\n7. Working with Stack (12 hours) - Introduction - Stack model - Subroutine and Stack - Stack and exception handling\n8. Interrupts - Introduction - Nested Vectored Interrupt Controller - Interrupt priority\n9. Exception Handling - Exception activation and de-activation - NVIC Registers - Pending Interrupt behavior - Exception Vector Table - Exception entry and exit sequence\n10. Guest Lecture - Applications and real-world issues of embedded systems\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Building a Simulation Model.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Simulation Experiment and Reflecting on the Experience."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical exercise/ Team-work project): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practical exercise/ Project defense): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/embeded_system_additional_reading_materials": [
    {
      "text": "Primary Materials: - Pratik Desai (2015), Python Programming for Arduino, Packt Publishing. - Carmine Noviello (2016), Mastering the STM32 Microcontroller, Leanpub.\nReference Materials: - Yifeng Zhu (2016), Embedded Systems with ARM Cortex-M Microcontrollers in Assembly Language, 2nd edition, E-Man Press LLC."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_course_code": [
    {
      "text": "The course code of Computer graphics is xxFIT3CGR."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_prerequisite": [
    {
      "text": "No, Computer graphics doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_is_prerequisite_courses": [
    {
      "text": "No, Computer graphics isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Computer graphics is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_number_of_credits": [
    {
      "text": "Computer graphics is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_number_of_credit_hours": [
    {
      "text": "Computer graphics is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_course_type": [
    {
      "text": "Computer graphics is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Huy Anh, email: anhnh@hanu.edu.vn - MSc Dinh Thi Minh Nguyet, email: nguyetdtm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_objective_of_course": [
    {
      "text": "This course provides students with fundamental knowledge of computer graphics, encompassing concepts and applications of computer graphics, hardware, graphics software, color systems, algorithms for drawing lines and circles, basic transformations, and observation operations in two and three-dimensional space. Practical content aims at understanding and constructing algorithms for drawing shapes, coloring, and transforming objects in two and three-dimensional space.\nKnowledge: - Present basic concepts of computer graphics and its practical applications. - Explain fundamental algorithms for drawing and coloring, including lines, circles, ellipses, and polygons. - Differentiate between basic transformations and observation operations in two and three-dimensional spaces.\nSkills: - Creatively produce graphic designs, images, and written text to effectively convey information. - Create various print and online publication formats showcasing graphic designs."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_course_structure": [
    {
      "text": "1. Overview of Computer Graphics - Introduction to the overview - Applications of computer graphics - Overview of a graphics system\n2. Line Drawing Algorithms - Concepts of lines - DDA Algorithm - Bresenham's Algorithm - Midpoint Algorithm\n3. Circle Drawing Algorithms - Concepts of circles - Bresenham's Algorithm - Midpoint Algorithm\n4. Ellipse Drawing Algorithms - Concepts of ellipses - Bresenham's Algorithm - Midpoint Algorithm\n5. Transformations in 2D Space - Basic transformations - Composite transformations - Conversion from world coordinates to screen coordinates\n6. Midterm Exam\n7. Observation in 2D Space - Windows and viewports - Window-to-viewport transformations\n8. 2D Clipping - Cohen-Sutherland Algorithm - Liang-Barsky Algorithm - Midpoint Subdivision Algorithm\n9. Transformations in 3D Space - Overview of 3D coordinate systems - Right-hand and left-hand coordinate systems - Point representation - Generalized transformations - Geometric transformations - Axis transformation - Observer transformation\n10. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Building a Simulation Model.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Simulation Experiment and Reflecting on the Experience."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Results of assignment. - Weight: 10% - Midterm Exam (Multiple choice questions/ Team-work project): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Practical exercise): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/computer_graphics_additional_reading_materials": [
    {
      "text": "Primary Materials: - Donald Hearn, M. Pauline Baker (2009), Computer Graphics, 2nd Edition, Prentice Hall.\nReference Materials: - Edward Angel (2005), Interactive Computer Graphics: A Top-Down Approach with OpenGL, 4th Edition, Addison-Wesley."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_course_code": [
    {
      "text": "The course code of Introduction to Information Security is xxFIT3IIS."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_prerequisite": [
    {
      "text": "No, Introduction to Information Security doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_is_prerequisite_courses": [
    {
      "text": "No, Introduction to Information Security isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Introduction to Information Security is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_number_of_credits": [
    {
      "text": "Introduction to Information Security is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_number_of_credit_hours": [
    {
      "text": "Introduction to Information Security is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_course_type": [
    {
      "text": "Introduction to Information Security is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Do Thi Phuong Thao, email: thaodtp_fit@hanu.edu.vn - MSc Nguyen Huy Anh, email: anhnh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_objective_of_course": [
    {
      "text": "This course aims to equip learners with fundamental knowledge in information security, covering basic concepts of attacks, security, and their real-world applications. The goal is to enable students to understand and appropriately apply information security measures, assess, and choose suitable security methods.\nKnowledge: - Present basic concepts of information security, the structure, and design of information security. - Differentiate analysis methods and evaluate security methods. - Explain knowledge about risk management, remediation, and basic security controls.\nSkills: - Identify some information security risks. - Remedy common information security incidents. - Develop information security policies for an organization.\nAutonomy and Responsibility: - Recognize the role of information security and professional ethics requirements in the field of information security."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_course_structure": [
    {
      "text": "1. Introduction 2. Principles of Information Security 3. General Knowledge 4. Risk Management 5. Security Architecture 6. Incident Response 7. Legal Issues 8. Midterm Exam 9. Physical Layer Safety Controls 10. Safety Operations 11. Access Control 12. Encryption 13. Network and Communication Security Issues 14. Discussion 15. Review 16. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Building a Simulation Model.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Simulation Experiment and Reflecting on the Experience."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Weekly assignment: Results of assignment. - Weight: 10% - Midterm Exam (Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 20%\nEnd-of-Course Assessment: - Final Exam (Multiple choice questions/ Team-work project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/introduction_to_information_security_additional_reading_materials": [
    {
      "text": "Primary Materials: - Mark S. Merkow Jim Breithaupt (2014), Information Security: Principles and Practices, Second Edition, Pearson.\nReference Materials: - Syngress (2003), Security + Study Guide and DVD Training System."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_course_code": [
    {
      "text": "The course code of Software Engineering 1 is xxFIT3SE1."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_prerequisite": [
    {
      "text": "Yes, Software Engineering 1 requires Programming 2 as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_is_prerequisite_courses": [
    {
      "text": "Yes, Software Engineering 1 is prerequisite course of Software Engineering 2 and Software Quality Assurance."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Software Engineering 1 is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_number_of_credits": [
    {
      "text": "Software Engineering 1 is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_number_of_credit_hours": [
    {
      "text": "Software Engineering 1 is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_course_type": [
    {
      "text": "Software Engineering 1 is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Dang Dinh Quan, email: quandd@hanu.edu.vn - MSc Nguyen Dinh Tran Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_objective_of_course": [
    {
      "text": "This course aims to provide learners with knowledge related to the design and development of software using object-oriented programming techniques. It helps learners develop skills in using object-oriented programming techniques to develop software, such as designing constraints, using hierarchical type structures, exception handling, sequential abstraction, and program testing. By the end of the course, learners will apply analysis, design, and source code deployment techniques in a small-scale software project.\nKnowledge: - Present the software development life cycle and some applied standards. - Explain software architecture and some commonly used architectural models. - Explain the principles of object-oriented software design.\nSkills: - Design constraints on the class model using notes. - Efficiently use hierarchical type structures; design programs using exception handling; design sequential abstraction. - Use the UML object-oriented modeling language in analysis and design modeling. - Implement source code according to the design specification.\nAutonomy and Responsibility Skills: - Be conscious of improving specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_course_structure": [
    {
      "text": "1. Advanced Class Design: - Hierarchical Type Structures - Exception Handling - Sequential Abstraction\n2. Software Testing and Debugging\n3. Software Technology: - Introduction to Software Technology - Requirements Analysis\n4. Modeling and Requirement Specification\n5. Object-Oriented Design\n6. Code Implementation\n7. Software Testing\n8. Architectural Design\n9. Review\n10. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Assigment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Pracitcal exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_1_additional_reading_materials": [
    {
      "text": "Primary Materials: - Sommerville, I. (2011). Software Engineering (9th ed.). Pearson. - Brambilla, M., Cabot, J., & Manuel Wimmer. (2017). Model-Driven Software Engineering in Practice (2nd Edition). Morgan & Claypool Publishers.\nReference Materials: - Mussbacher, G., et al. (2014). The Relevance of Model-Driven Engineering Thirty Years from Now. In journal, Model-Driven Engineering Languages and Systems (pp. 183â200). Springer International Publishing. Retrieved from http://link.springer.com/chapter/10.1007/978-3-319-11653-2_12 -\tOMG. (2015). Unified Modeling Language version 2.5. Retrieved from http://www.omg.org/spec/UML/2.5/"
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_course_code": [
    {
      "text": "The course code of Software Quality Assurance is xxFIT3SQA."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_prerequisite": [
    {
      "text": "Yes, Software Quality Assurance requires Software Engineering 1 as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_is_prerequisite_courses": [
    {
      "text": "No, Software Quality Assurance isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Software Quality Assurance is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_number_of_credits": [
    {
      "text": "Software Quality Assurance is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_number_of_credit_hours": [
    {
      "text": "Software Quality Assurance is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_course_type": [
    {
      "text": "Software Quality Assurance is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Van Cong, email: congnv@hanu.edu.vn - MSc Nguyen Dinh Tran Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_objective_of_course": [
    {
      "text": "The goal of the course is to provide learners with knowledge related to the assessment and assurance of software quality. This helps learners develop skills such as planning software testing, conducting software testing, self-evaluating the scope and effectiveness of the testing process, and using statistical methods to calculate error density and the likelihood of errors.\nKnowledge: - Present concepts and criteria for software quality assessment. - Explain issues related to software quality. - Explain common errors in the software development process and methods to avoid them.\nSkills: - Evaluate software, confirming the correctness of the software's output with different input data. - Analyze software errors or issues related to software quality. - Handle and minimize errors during software development.\nAutonomy and Responsibility: - Demonstrate awareness of enhancing specialized knowledge relevant to the course."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_course_structure": [
    {
      "text": "1. Introduction 2. Mathematical Foundation 3. Accuracy of Data and Data Errors 4. Concepts and Terminology of Software Evaluation and Testing 5. Criteria and Metrics in Software Testing 6. Software Evaluation Survey 7. Software Testing Techniques 8. Analysis and Reporting of Software Errors 9. Midterm Exam 10. Significance and Concepts of Software Quality Management 11. Standards for Software Quality Management 12. Product Quality Assurance 13. Some Issues in Information Security 14. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Assigment and exam): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Pracitcal exam/ Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/software_quality_assurance_additional_reading_materials": [
    {
      "text": "Primary Materials: - Kshirasagar Naik (2008), Software Testing and Quality Assurance: Theory and Practice, Wiley.\nReference Materials: - Claude Y. Laporte (2016), Software Quality Assurance, IEEE Press - Wiley. - Davis Pamas (2012), The use of mathematics in software quality assurance, Article in Frontiers of Computer Science in China."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_course_code": [
    {
      "text": "The course code of Software Engineering 2 is xxFIT3SE2."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_prerequisite": [
    {
      "text": "Yes, Software Engineering 2 requires Software Engineering 1 as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_is_prerequisite_courses": [
    {
      "text": "No, Software Engineering 2 isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Software Engineering 2 is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_number_of_credits": [
    {
      "text": "Software Engineering 2 is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_number_of_credit_hours": [
    {
      "text": "Software Engineering 2 is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_course_type": [
    {
      "text": "Software Engineering 2 is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Dang Dinh Quan, email: quandd@hanu.edu.vn - MSc Nguyen Dinh Tran Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_objective_of_course": [
    {
      "text": "The goal of the course is to provide learners with knowledge related to the architecture-level design and development of software. This aims to help learners develop skills such as applying various software architectures and frameworks to design different types of software, designing software using commercially available software components, and efficiently utilizing software configuration management tools.\nKnowledge: - Present concepts of model-driven software architecture; types and patterns of software architecture. - Classify software architecture frameworks; intermediate architectures; software configurations. - Discuss various software product lines.\nSkills: - Design architecture for simple software based on software requirements. - Utilize software configuration management tools and apply change management processes in software development. - Design and develop a distributed architecture for a simple software. - Develop software using commercially available or open-source software components.\nAutonomy and Responsibility: - Consciously enhance specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_course_structure": [
    {
      "text": "1. Model-Driven Architecture 2. Software Architectural Patterns 3. Framework and Intermediate Architectures 4. Configuration and Configuration Management 5. Software Product Lines 6. Designing Software using Commercial Off-The-Shelf (COTS) 7. Review 8. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Assigment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Pracitcal exam/ Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/software_engineering_2_additional_reading_materials": [
    {
      "text": "Primary Materials: - Eric Freeman and Elisabeth Robson (2020). Head First Design Patterns: Building Extensible and Maintainable Object-Oriented Software (2nd ed.). O'Reilly Media.\nReference Materials: - Brambilla, M., Cabot, J., & Manuel Wimmer. (2017). Model-Driven Software Engineering in Practice (2nd Edition). Morgan & Claypool Publishers. - Whittle, J., Hutchinson, J., & Rouncefield, M. (2014). The State of Practice in Model-Driven Engineering. IEEE Software, 31(3). https://doi.org/10.1109/MS.2013.65"
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_course_code": [
    {
      "text": "The course code of Web Programming is xxFIT3WPR."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_prerequisite": [
    {
      "text": "Yes, Web Programming requires Programming 1 and Database as prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_is_prerequisite_courses": [
    {
      "text": "No, Web Programming isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Web Programming is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_number_of_credits": [
    {
      "text": "Web Programming is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_number_of_credit_hours": [
    {
      "text": "Web Programming is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_course_type": [
    {
      "text": "Web Programming is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Van Cong, email: congnv@hanu.edu.vn - MSc Nguyen Dinh Tran Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_objective_of_course": [
    {
      "text": "The objective of the course is to provide learners with knowledge related to designing, deploying, and maintaining a website. This aims to help learners develop skills such as installing and operating a dynamic website, designing interfaces using HTML, CSS, JavaScript, developing dynamic websites using a database, and identifying and addressing security issues related to websites.\nKnowledge: - Present the components of a website such as HTML, CSS, and JavaScript. - Explain the architectural model and principles of operation of web services. - Explain concepts and the functioning and connection between websites and database management systems.\nSkills: - Deploy and maintain a website. - Design website interfaces using HTML, CSS, and JavaScript. - Develop a dynamic website with a connection to a database.\nAutonomy and Responsibility: - Demonstrate awareness and commitment to enhancing specialized knowledge relevant to the course."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_course_structure": [
    {
      "text": "1. Introduction 2. HTML 3. CSS 4. PHP 5. Form Handling 6. Form Validation and JavaScript 7. jQuery, Ajax, XML, and JSON 8. Database Design 9. Developing Dynamic Websites using Databases 10. Website Administration and Maintenance 11. Review 12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Assigment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Pracitcal exam/ Group project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/web_programming_additional_reading_materials": [
    {
      "text": "Primary Materials: - Robin Nixon (2018), Learning PHP, MySQL & JavaScript with JQuery, CSS and HTML5, 5th Edition.\nReference Materials: - MDN Web Docs (2021), Learn Web Development, https://developer.mozilla.org/en-US/docs/Learn - Scott Granneman, (2021), All presentations about Web Development and Web Design, https://www.granneman.com/presentations/all-presentations"
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_course_code": [
    {
      "text": "The course code of Software Project Management is xxFIT4SPM."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_prerequisite": [
    {
      "text": "Yes, Software Project Management requires Project Management as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_is_prerequisite_courses": [
    {
      "text": "No, Software Project Management isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Software Project Management is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_number_of_credits": [
    {
      "text": "Software Project Management is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_number_of_credit_hours": [
    {
      "text": "Software Project Management is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_course_type": [
    {
      "text": "Software Project Management is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Van Cong, email: congnv@hanu.edu.vn - MSc Nguyen Dinh Tran Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_objective_of_course": [
    {
      "text": "The objective of this course is to provide learners with knowledge related to software project management. This aims to help learners develop skills such as planning the implementation of a project, managing software development projects using different processes and scales, calculating costs, estimating project timelines, productivity, and other factors in the software development process.\nKnowledge: - Explain concepts and criteria related to software project management. - Differentiate between various models of software project management. - Present standards, techniques, and phases in the software project management process.\nSkills: - Plan the implementation of a software project. - Apply management techniques to software development projects of different processes and scales. - Calculate costs, estimate project timelines, and draft relevant documentation during the project management process. - Use basic tools to support the software project management process.\nIndependence and Responsibility: - Demonstrate awareness and commitment to enhancing specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_course_structure": [
    {
      "text": "1. Basic Concepts of Project Management 2. Requirements Management 3. Software Lifecycle 4. Software Quantification 5. Project Planning 6. Mid-term Exam 7. Project Monitoring 8. Risk Analysis 9. Quality Management 10. Human Resource Issues 11. Review 12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Project): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Theoritical exam): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/software_project_management_additional_reading_materials": [
    {
      "text": "Primary Materials: - Murali Chemuturi (2010), Mastering software project management Best Practices, Tools and Techniques, J. Ross Publishing.\nReference Materials: - Ken Schwaber and Jeff Sutherland (2017), The Scrum Guide. - Hughes B. & Cotterrell M. (2009), Software Project Management, 5th Edition, Mc-Graw Hill"
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_course_code": [
    {
      "text": "The course code of Information System Design & Implementation is xxFIT3ISD."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_prerequisite": [
    {
      "text": "Yes, Information System Design & Implementation requires System analysis and design as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_is_prerequisite_courses": [
    {
      "text": "No, Information System Design & Implementation isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Information System Design & Implementation is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_number_of_credits": [
    {
      "text": "Information System Design & Implementation is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_number_of_credit_hours": [
    {
      "text": "Information System Design & Implementation is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_course_type": [
    {
      "text": "Information System Design & Implementation is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Trinh Bao Ngoc, email: ngoctb@hanu.edu.vn - MSc Dinh Thi Minh Nguyet, email: nguyetdtm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_objective_of_course": [
    {
      "text": "The course provides learners with knowledge related to the design of information systems, including systems, information systems, stages of the design process, deployment of information systems, and data models of an information system (conceptual data model, logical data model, and physical data model). It aims to help learners develop skills in designing information systems such as project construction, analysis, design, and deployment of information systems.\nKnowledge: - Explain the basic concepts of systems, information systems, and the roles of information systems. - Present the process of designing and deploying an information system and the roles of components in this process. - Discuss data models, data flow diagrams, and methods for designing data flow diagrams. - Explain the functional model and the process of decomposing functions of a software information system.\nSkills: - Analyze the design of information systems using an object-oriented model. - Understand specifications for designing to deploy source code for information system software. - Create documents, specifications, and documents describing the analysis and design process of information systems.\nIndependence and Responsibility: - Demonstrate an awareness of continuous improvement of specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_course_structure": [
    {
      "text": "1. Topic 1: Advanced UML - UML structure - Diagrams used in Agile - Problem analysis\n2. Topic 2: Agile Software Development Process - Introduction - Roles within the team - Planning - User story\n3. Topic 3: Advanced Object-Oriented Analysis and Design - Business modeling - Requirements determination - Analysis - Design\n4. Topic 4: Programming Languages - Introduction - Language structure - Object-oriented programming - Frameworks\n5. Topic 5: Software Testing - Introduction - Testing process - Testing techniques - Test cases\n6. Midterm Exam\n7. Topic 6: Project Planning - Project cost estimation - Contract determination - Human resource planning - Project planning\n8. Topic 7: Project Requirements Identification - Understanding the business - Project requirement description - Prototype\n9. Topic 8: Project Analysis and Design - Building project analysis HL - Building project design HL\n10. Topic 9: Project Programming - Language determination - Framework selection"
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Group project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/information_system_design_and_implementation_additional_reading_materials": [
    {
      "text": "Primary Materials: - Jonathan Rasmusson (2010), The Agile Samurai - How agile masters deliver great software, The Pragmatic Bookshelf..\nReference Materials: - Alan Dennis (2011), System Analysis and Design 5th Edition, John Wiley & Sons, Inc."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_course_code": [
    {
      "text": "The course code of Enterprise Information Systems is xxFIT4EIS."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_prerequisite": [
    {
      "text": "No, Enterprise Information Systems doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_is_prerequisite_courses": [
    {
      "text": "No, Enterprise Information Systems isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Enterprise Information Systems is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_number_of_credits": [
    {
      "text": "Enterprise Information Systems is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_number_of_credit_hours": [
    {
      "text": "Enterprise Information Systems is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_course_type": [
    {
      "text": "Enterprise Information Systems is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Trinh Bao Ngoc, email: ngoctb@hanu.edu.vn - MSc Dinh Thi Minh Nguyet, email: nguyetdtm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_objective_of_course": [
    {
      "text": "This course provides students with knowledge of basic business processes in an organization/enterprise and the information systems used to manage these processes. Students will practice describing business processes, analyzing information needs from different perspectives, and implementing basic modules of Enterprise Resource Planning (ERP) software.\nKnowledge: - Explain the roles of different modules in the enterprise information system. - Describe key business processes in various modules such as Sales, Purchasing, Inventory Management, Financial Accounting, etc. - Explain the operations of basic modules in Enterprise Resource Planning (ERP) software.\nSkills: - Analyze information needs from operational-level business processes. - Analyze information needs from managerial-level business processes. - Design and implement a basic module of ERP software.\nAutonomy and Responsibility: - Demonstrate awareness and commitment to improving specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_course_structure": [
    {
      "text": "1. Chapter 1: Characteristics of the Digital World - Describing the digital world and the era of information. - Globalization. - Introduction to Executive Information Systems (EIS). - Describing the characteristics of EIS related to the success and failure of businesses.\n2. Chapter 2: Infrastructure and Services Management of Information Systems - Introduction to the infrastructure of EIS. - Issues in infrastructure management. - Services of EIS. - Cloud computing.\n3. Chapter 3: EIS in Organizations - Characteristics of positions in EIS. - Value/Cost. - Information quality. - Competitive advantages of information. - EIS and strategies. - Value chain.\n4. Chapter 4: Internet and WWW - Introduction to e-commerce. - Intranets, Internet, extranets. - E-Government. - Web 2.0.\n5. Chapter 5: EIS Security - Threats. - Security techniques. - Security management and planning.\n6. Midterm Exam\n7. Chapter 6: Business Intelligence - Organizational structure and decision-making. - Information and knowledge exploration. - Applied systems. - Data modeling.\n8. Chapter 7: E-commerce - Introduction and definitions. - E-commerce strategies in the digital space. - Success factors.\n9. Chapter 8: Improving the Supply Chain and Customer Care - Introduction. - Multi-organizational business processes. - Improving the supply chain and customer care.\n10. Chapter 9: EIS Development - Expressing business operations. - Software development process."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Group project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/enerprise_information_systems_additional_reading_materials": [
    {
      "text": "Primary Materials: - Joseph Valacich, Christoph Schneider (2017), Information Systems Today (8th Edition), Prentice Hall.\nReference Materials: - David T. Bourgeois (2014), Information Systems for Business and Beyond, The Saylor Foundation."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_course_code": [
    {
      "text": "The course code of Human Computer Interaction is xxFIT3HCI."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_prerequisite": [
    {
      "text": "No, Human Computer Interaction doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_is_prerequisite_courses": [
    {
      "text": "No, Human Computer Interaction isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Human Computer Interaction is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_number_of_credits": [
    {
      "text": "Human Computer Interaction is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_number_of_credit_hours": [
    {
      "text": "Human Computer Interaction is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_course_type": [
    {
      "text": "Human Computer Interaction is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Trinh Bao Ngoc, email: ngoctb@hanu.edu.vn - MSc Nguyen Thuy Linh, email: linhthuy@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_objective_of_course": [
    {
      "text": "The objective of the course is to provide students with basic knowledge in the field of interactive interface design between users and software. It aims to help students apply and practice the acquired knowledge through exercises, projects, and specific products.\nKnowledge: - Present fundamental concepts in interface design, including common principles. - Explain the characteristics and requirements of interaction between users and software. - Describe the process of evaluating user interface.\nSkills: - Design user interfaces for information systems with diverse user profiles based on standard principles. - Evaluate interfaces and troubleshoot interface issues.\nAutonomy and Responsibility: - Work independently or in groups during the process of designing interfaces for information systems."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Overview of Human-Computer Interaction (HCI)\n2. User Aspects\n3. Computer Aspects\n4. Interaction\n5. Cultural Factors in HCI Design: International Context and Vietnam\n7. Design Principles: - Design principles: Learnability\n8. Design Principles: - Design principles: Flexibility\n9. Design Principles: - Design principles: Robustness\n10. Evaluation Techniques\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Group project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/human_computer_interaction_additional_reading_materials": [
    {
      "text": "Primary Materials: - Helen Sharp, Yvonne Rogers (2019), Interaction Design: Beyond Human-Computer Interaction 5th Edition, John Wiley & Sons, Inc.\nReference Materials: - Jeff Johnson (2020), Designing with the Mind in Mind: Simple Guide to Understanding User Interface Design Guidelines 3rd edition, Morgan Kaufmann."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_course_code": [
    {
      "text": "The course code of Multimedia is xxFIT3MUL."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_prerequisite": [
    {
      "text": "No, Multimedia doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_is_prerequisite_courses": [
    {
      "text": "No, Multimedia isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Multimedia is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_number_of_credits": [
    {
      "text": "Multimedia is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_number_of_credit_hours": [
    {
      "text": "Multimedia is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_course_type": [
    {
      "text": "Multimedia is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Huy Anh, email: anhnh@hanu.edu.vn - MSc Nguyen Thuy Linh, email: linhthuy@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_objective_of_course": [
    {
      "text": "The objective of the course is to equip learners with fundamental knowledge about multimedia, the structure, and nature of basic data types, and their applications in real-world scenarios. This helps learners understand and apply data types accurately and effectively, evaluate, select, and replace them appropriately. Furthermore, it enables them to design and implement multimedia projects, deploy application products to serve educational, research, and work purposes.\nKnowledge - Present concepts related to multimedia and multimedia systems. - Differentiate multimedia data types and their applications. - Explain the principles of data compression, decompression, and conversion to various formats.\nSkills - Design and implement multimedia projects. - Evaluate performance, choose suitable image/sound/video data types in specific application contexts.\nAutonomy and Responsibility Skills - Work independently or in a group to complete assigned tasks. - Evaluate the quality of work after completion and assess the performance of team members."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Overview of multimedia - Multimedia systems - Multimedia data\n2. Text and Images - Text representation - Image representation - Color encoding\n3. Digital Audio - Digitization - Digital audio formats - Audio synthesis\n4. Animation and Video - Animation - Video formats - Video synthesis\n5. Multimedia Product Production - Projects - Tools\n6. Midterm Exam\n7. Multimedia Product Design - Design principles - Design steps - Content identification - Product publishing\n8. Multimedia Protocols - Multicast protocols - Quality of service - Proxy and caching - On-demand content delivery\n9. Multimedia on the Web - Text representation - Graphics representation - Audio, Animation, and Video representation\n10. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Group project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/multimedia_additional_reading_materials": [
    {
      "text": "Primary Materials: - Tay Vaugan (2018), Multimedia Making it work, 11th Edition, Mc Graw Hill .\nReference Materials: - Ze-Nian Li, Mark S. Drew (2015), Fundamentals of Multimedia, Prentice Hall."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_course_code": [
    {
      "text": "The course code of E-Business is xxFIT3EBU."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_prerequisite": [
    {
      "text": "No, E-Business doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_is_prerequisite_courses": [
    {
      "text": "No, E-Business isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching E-Business is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_number_of_credits": [
    {
      "text": "E-Business is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_number_of_credit_hours": [
    {
      "text": "E-Business is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_course_type": [
    {
      "text": "E-Business is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Vu Minh Tuan, email: tuanvm_fit@hanu.edu.vn - MSc Dinh Thi Minh Nguyet, email: nguyetdtm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_objective_of_course": [
    {
      "text": "The objective of the course is to provide learners with knowledge of the concepts, tools, and relevant skills in the field of e-business. Additionally, it aims to facilitate the exchange of valuable experiences to help learners develop team management skills in the process of implementing e-business or digital marketing projects.\nKnowledge: - Explain the roles of network and digital technologies in e-business. - Describe the fundamental operation processes of e-business activities. - Present basic knowledge of digital marketing and digital marketing campaigns.\nSkills: - Deploy e-commerce systems (websites, management software/systems). - Plan and execute real-world projects in digital marketing within a team in a short timeframe.\nAutonomy and Responsibility: - Demonstrate proactive awareness of legal issues related to e-commerce and business in the digital environment. - Exhibit a conscious effort to enhance specialized knowledge relevant to the course."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Overview of electronic commerce\n2. E-commerce Models - Study and analyze various e-commerce models\n3. E-marketing - Explore strategies and methods in the field of electronic marketing\n4. Implementation of E-commerce Systems - Guidance on implementing various e-commerce systems\n5. Infrastructure and Management of E-commerce Systems - Grasp the infrastructure and management of e-commerce systems\n6. Planning - Develop planning skills for e-commerce projects\n7. Midterm Exam\n8. Supply Chain Management - Discuss strategies and techniques for supply chain management in the context of e-commerce\n9. Mobile Commerce - Learn about aspects and applications of mobile commerce\n10. Legal Issues - Address important legal issues in the field of e-commerce\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Group project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/ebusiness_additional_reading_materials": [
    {
      "text": "Primary Materials: - Schneider, G (2016). Electronic Commerce 12th Edition. Thomson Learning. - Jelassi and Albrecht (2014), Strategies for E. Business Creating Value through Electronic and Mobile Commerce Concepts and Cases 3rd Edition, Prentice-Hall.\nReference Materials: - Turban, E., et al (2018), Electronic Commerce: A Managerial and Social Network Perspective, 9th Edition. Prentice Hall."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_course_code": [
    {
      "text": "The course code of Network administration is xxFIT3NAD."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_prerequisite": [
    {
      "text": "No, Network administration doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_is_prerequisite_courses": [
    {
      "text": "No, Network administration isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Network administration is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_number_of_credits": [
    {
      "text": "Network administration is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_number_of_credit_hours": [
    {
      "text": "Network administration is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_course_type": [
    {
      "text": "Network administration is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Do Thi Phuong Thao, email: thaodtp_fit@hanu.edu.vn - MSc Tran Nguyen Khanh, email: khanhtn@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_objective_of_course": [
    {
      "text": "The objective of this course is to equip learners with fundamental and in-depth knowledge of network management, including concepts, functions, models, processes, and implementation methods. The course covers knowledge about network devices, systems, and operating systems. It aims to help learners develop related network management skills such as analysis, design, planning, and practical network administration.\nKnowledge: - Clearly present the concepts and functions of network management activities. - Differentiate between models and processes of network management in real-world scenarios. - Explain the steps in the network management process.\nSkills: - Plan activities related to network management. - Operate and manage networks as per requirements; diagnose and resolve network issues. - Install popular network operating systems.\nSelf-reliance and Responsibility: - Demonstrate awareness and actively enhance specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_course_structure": [
    {
      "text": "1. Introduction to Network Management - Concepts - Functions - Significance\n2. Network Management Activities - Roles of relevant parties - Activities of network administrators - Basic components\n3. Cycles and Models of Network Management - Multidimensional architecture in network management - Lifecycle of computer systems - Management cycle - Network management models\n4. Stages of Network Management - Planning - System operation management - System monitoring - Error management - Execution - Security management\n5. Network Device Management - LAN network devices - Switching devices - Routing devices\n6. Midterm Exam\n7. Windows Network Operating System - Overview of Windows Server - Active Directory - Group and user account management - System policies and group policies - Storage devices and files - Management of network services\n8. Linux Network Operating System - Overview of Linux Server - Domain Controller - Account and policy management - Storage devices and files - Management of network services\n9. Guest Lecture\n10. Review\n11. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/network_administration_additional_reading_materials": [
    {
      "text": "Primary Materials: - Russ White (2018), Computer Networking Problems and Solutions,  Addison-Wesley Professional. - Alexander Clemm (2007), Network Management Fundamentals, Cisco Press.\nReference Materials: - Bekim Bauti (2019), Window Server 2019 Administrator Fundamentals, Packt Publishing. - Tom Adelstein, Bill Lubanovic (2007), Linux System Administration: Solve Real-life Linux Problems Quickly, O'Reilly Media."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_course_code": [
    {
      "text": "The course code of Network security is xxFIT3NSE."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_prerequisite": [
    {
      "text": "No, Network security doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_is_prerequisite_courses": [
    {
      "text": "No, Network security isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Network security is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_number_of_credits": [
    {
      "text": "Network security is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_number_of_credit_hours": [
    {
      "text": "Network security is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_course_type": [
    {
      "text": "Network security is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Phung Van Dong, email: dongpv@hanu.edu.vn - MSc Le Hoang Nam, email: namlh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/network_security_objective_of_course": [
    {
      "text": "The objective of the course is to provide learners with knowledge of computer network security. This aims to help learners develop skills in analyzing and implementing computer security solutions, as well as the ability to apply the acquired knowledge to solve real-world problems.\nKnowledge: - Explain the causes of network vulnerabilities; characteristics and classification of computer network vulnerability groups. - Present the solution groups used to detect and prevent network intrusions. - Present the role of data encryption in information security and data transmission on the network; characteristics and operating principles of some common data encryption algorithms. - Explain the characteristics and operation mechanisms of Firewall, VPN, NAT, IDS/IPS.\nSkills: - Install and configure ACLs, Firewalls, IDS/IPS. - Install and configure network vulnerability analysis tools. - Choose appropriate network security solutions for real-world networks.\nSelf-reliance and Responsibility: - Recognize the role of network information security and professional ethics requirements in the field of network security."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_course_structure": [
    {
      "text": "1. Topic 1: Basic Components of Information Security 1.1. Access Control 1.2. Authentication 1.3. Inspection\n2. Topic 2: Encryption 2.1. Algorithms 2.2. Applications\n3. Topic 3: Authentication\n4. Topic 4: Network Devices\n5. Topic 5: Access Management\n6. Topic 6: Wireless Network Security\n7. Midterm Exam\n8. Topic 7: Security Architecture and Intrusion Detection Systems\n9. Topic 8: Vulnerabilities and Attacks\n10. Topic 9: Remote Access and Email Security\n11. Topic 10: System Upgrades\n12. Topic 11: Incident Handling\n13. Topic 12: Security Policies and Information Recovery\n14. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/network_security_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practial assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/network_security_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/network_security_additional_reading_materials": [
    {
      "text": "Primary Materials: - Syngress (2019), Security + Study Guide and DVD Training System.\nReference Materials: - Mark S. Merkow Jim Breithaupt (2021), Information Security: Principles and Practices, 3rd Edition, Wiley."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_course_code": [
    {
      "text": "The course code of Network programming is xxFIT3NPR."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_prerequisite": [
    {
      "text": "No, Network programming doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_is_prerequisite_courses": [
    {
      "text": "No, Network programming isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Network programming is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_number_of_credits": [
    {
      "text": "Network programming is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_number_of_credit_hours": [
    {
      "text": "Network programming is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_course_type": [
    {
      "text": "Network programming is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Tran Nguyen Khanh, email: khanhtn@hanu.edu.vn - MSc Nguyen Huy Anh, email: anhnh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_objective_of_course": [
    {
      "text": "The objective of the course is to provide learners with fundamental knowledge of network programming, such as the Client-Server model, Socket API library, and object classes in the java.net library. This will help learners develop skills in building various network applications, including data transmission applications at the Network layer with UDP, TCP, ICMP protocols, and distributed applications using RMI. The knowledge gained in the course can be applied in network management programming, network monitoring, and network control.\nKnowledge: - Explained concepts related to network programming and network applications. - Explained the method of developing network applications using the Client-Server model. - Differentiated network programming techniques and the development of network applications such as Socket API, TCP/UDP, multithreading, and the RMI library.\nSkills: - Programmed a data transmission application using TCP/UDP. - Programmed a network control and management application using ICMP. - Programmed a Client-Server model network application using network programming techniques like Serializable Object, IOStream, Socket, and Java RMI.\nAutonomy and Responsibility: - Demonstrated awareness and commitment to enhancing relevant specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_course_structure": [
    {
      "text": "1. Introduction - Review of computer network knowledge. - Client-Server model. - Internet and communication protocols. - Network applications and network application development.\n2. Java Programming - Review of Java programming concepts. - IOStream. - Thread.\n3. Socket - Introduction. - InetAddress class. - Socket class. - ServerSocket class.\n4. TCP Socket - Introduction. - Communication model between Client and Server using TCP. - Client-side programming. - Server-side programming. - Other issues.\n5. UDP Socket - Introduction. - Communication model between Client and Server using UDP. - Client-side programming. - Server-side programming. - Other issues.\n6. Midterm Exam\n7. Multithreaded Programming - Introduction. - Using Threads on the Server. - Other issues.\n8. Distributed Programming with Java RMI - Introduction. - Architecture. - Client-side programming. - Server-side programming.\n9. Network Application Development - URL, URI. - HTTP protocol and URLConnection class. - SMTP protocol and JavaMail API. - FTP protocol.\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/network_programming_additional_reading_materials": [
    {
      "text": "Primary Materials: - Harold, E. R. (2013), Java Network Programming, 4th Edition, O'Reilly. - William Grosso (2001), Java RMI: Designing & Building Distributed Applications, O'Reilly.\nReference Materials: - Kenneth L. Calvert, Michael J. Donahoo (2008), TCP/IP Sockets in Java: Practical Guide for Programmers, 2nd Edition, Morgan Kaufmann."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_course_code": [
    {
      "text": "The course code of Internet and Web Services is xxFIT3IWS."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_prerequisite": [
    {
      "text": "No, Internet and Web Services doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_is_prerequisite_courses": [
    {
      "text": "No, Internet and Web Services isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Internet and Web Services is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_number_of_credits": [
    {
      "text": "Internet and Web Services is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_number_of_credit_hours": [
    {
      "text": "Internet and Web Services is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_course_type": [
    {
      "text": "Internet and Web Services is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Huu Cam, email: camnh@hanu.edu.vn - MSc Dinh Thi Minh Nguyet, email: nguyetdtm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_objective_of_course": [
    {
      "text": "The course introduces fundamental knowledge about the Web service model and guides learners on publishing the functionalities of an application in the form of a Web service. Additionally, the course aims to equip learners with skills related to using available APIs or designing and building basic APIs for an application using Web services.\nKnowledge: - Explain the concepts and applications of Web services. - Differentiate commonly used APIs for publishing application functionalities as Web services. - Explain security issues related to Web services.\nSkills: - Select available functionalities of an application to publish as Web services. - Design and deploy some simple RESTful APIs.\nSelf-reliance and Responsibility: - Demonstrate awareness in enhancing specialized knowledge related to the course. - Work independently or in groups to accomplish assigned tasks."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_course_structure": [
    {
      "text": "1. Introduction to the Course, Definitions, and Specialized Concepts 2. Transport Layer 3. Overview of Web Services 4. XML and HTTP 5. SOAP-Based Web Services 6. Group Discussion 7. PHP Programming Language 8. JSON 9. REST-Based Web Services 10. Guidance on Major Assignment 11. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/internet_and_web_services_additional_reading_materials": [
    {
      "text": "Primary Materials: - 1Brenda Jin (2018). Designing Web API, O'Reilly Media.\nReference Materials: - Leonar Richardson (2013). RESTful Web API, O'Reilly Media - Brendan Burns. (2018). Designing Distributed System, O'Reilly Media"
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_course_code": [
    {
      "text": "The course code of Wireless networks and applications is xxFIT4WNA."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_prerequisite": [
    {
      "text": "No, Wireless networks and applications doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_is_prerequisite_courses": [
    {
      "text": "No, Wireless networks and applications isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Wireless networks and applications is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_number_of_credits": [
    {
      "text": "Wireless networks and applications is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_number_of_credit_hours": [
    {
      "text": "Wireless networks and applications is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_course_type": [
    {
      "text": "Wireless networks and applications is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Huy Anh, email: anhnh@hanu.edu.vn - MSc Bui Quoc Khanh, email: khanhbq@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_objective_of_course": [
    {
      "text": "The objective of the course is to equip learners with fundamental knowledge of wireless networks and applications, understanding basic concepts and principles of wireless networks, comprehension of 1G, 2G, 3G, 4G mobile networks, understanding wireless routing, wireless LANs, network security, and their real-world applications. This helps learners have the ability to understand and apply wireless networks correctly, as well as evaluate and choose suitable wireless networks.\n1. Knowledge: - Presented the concepts and applications of wireless networks. - Discussed 1G, 2G, 3G, 4G mobile networks, and wireless LANs, PANs. - Explained security issues in wireless systems.\n2. Skills: - Deployed a simple wireless LAN. - Managed a wireless network. - Implemented security solutions for wireless network systems.\n3. Independence and Responsibility: - Demonstrated awareness of improving specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_course_structure": [
    {
      "text": "1. Introduction 2. Principles of Wireless Communication 3. 1G Mobile Information Network 4. 2G Mobile Information Network 5. 3G Mobile Information Network 6. 4G Mobile Information Network 7. Satellite Information Network 8. Midterm Exam 9. Wireless Local Area Network (Wireless LAN) 10. Asynchronous Transfer Mode (ATM) Network and Wireless Ad Hoc Network 11. Personal Area Network (PAN) 12. Wireless Network Security 13. Wireless Network Simulation 14. Wireless Network Applications 15. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/wireless_networks_and_applications_additional_reading_materials": [
    {
      "text": "Primary Materials: - P. Nicopolitidis, M. S. Obaidat, G. I. Papadimitriou and A. S. Pomportsis (2003), Wireless Networks.  John Wiley & Sons, Ltd.\nReference Materials: - Abdulkadir OÌzcan, et. al, (2011), Recent Trends in Wireless and Mobile Networks, Springer. - Dieter Uckelmann, et. al, (2011), Architecting The Internet of Things, Springer."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_course_code": [
    {
      "text": "The course code of Mobile programming is xxFIT3MPR."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_prerequisite": [
    {
      "text": "Yes, Mobile programming requires Programming 1 as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_is_prerequisite_courses": [
    {
      "text": "No, Mobile programming isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Mobile programming is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_number_of_credits": [
    {
      "text": "Mobile programming is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_number_of_credit_hours": [
    {
      "text": "Mobile programming is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_course_type": [
    {
      "text": "Mobile programming is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Van Cong, email: congnv@hanu.edu.vn - MSc Nguyen Tran Dinh Long, email: longndt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_objective_of_course": [
    {
      "text": "The goal of this course is to provide learners with knowledge related to designing and deploying a mobile application on the Android platform. This aims to help learners develop skills in building basic components of the application such as user interface components (layout, views), data management, and program structure organization (architecture). Additionally, the course covers handling interactions with RESTful API web services (web interaction) and graphic tasks.\nKnowledge: - Explain common mobile application development platforms. - Present the model and programming process on mobile devices. - Explain the event-driven programming model used in mobile application development.\nSkills: - Build basic components of a mobile application, including the interface, data management, and program structure organization. - Program handling interactions with web services and graphic tasks. - Develop a simple mobile application.\nSelf-reliance and Responsibility: - Demonstrate awareness in continuously improving relevant specialized knowledge. - Work independently or collaboratively in a group to accomplish assigned tasks."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Introduction to the mobile programming platform\n2. Layout Programming\n3. Views Programming: - Custom controls - View measurement - View persistence\n4. Data Programming: - Listeners - Data persistence - Data Driven UI - Network Communication\n5. Architecture: - Model View Controller (MVC) - Activities - Global Application State - Messaging - Services - Fragments - Design/Media sensors\n6. Web Interaction: - RESTful Web Services - RESTful Web Services and CRUD\n7. Graphics Programming: - OpenGL Environment - OpenGL Operation - OpenGL Sprites\n8. Deploying Android Applications: - Applying Styles and Themes - Publishing on the Android Market - Application Licensing - Market Filters - Versioning Your Applications\n9. Review\n10. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/mobile_programming_additional_reading_materials": [
    {
      "text": "Primary Materials: - Mark L. Murphy. (2020). The Busy Coder's Guide to Android Development (6.0). CommonsWare. - Mark L. Murphy. (2018). Android Programming Tutorials (5.0). CommonsWare .\nReference Materials: - Google, The Android Developers Training Tutorial, 2017, URL: https://developer.android.com/training/index.html."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_course_code": [
    {
      "text": "The course code of Big data mining is xxFIT3BDM."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_prerequisite": [
    {
      "text": "No, Big data mining doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_is_prerequisite_courses": [
    {
      "text": "No, Big data mining isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Big data mining is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_number_of_credits": [
    {
      "text": "Big data mining is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_number_of_credit_hours": [
    {
      "text": "Big data mining is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_course_type": [
    {
      "text": "Big data mining is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Bui Quoc Khanh, email: khanhbq@hanu.edu.vn - MSc Do Thuy Duong, email: duongdt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_objective_of_course": [
    {
      "text": "The objective of this course is to equip learners with fundamental knowledge of data mining, including concepts and underlying techniques used in data mining. This enables learners to understand, apply, and know how to design and build data mining systems for educational, research, and work purposes.\nKnowledge: - Explain basic concepts, technologies, and applications of data mining. - Present the steps in the process of knowledge discovery. - Differentiate basic data mining tasks such as regression, classification, clustering, association rule mining, etc.\nSkills: - Identify data characteristics, calculate measures when classifying and clustering data. - Use data mining algorithms and tools to solve practical problems.\nIndependence and Responsibility Competencies: - Understand the significance, roles, challenges, and applications of data mining. - Be aware of the importance of continuously improving relevant specialized knowledge."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Data Mining - Technologies, applications, and development trends\n2. Data Mining Process - KT1, KT2 - Objectives - Techniques - Data warehousing and OLAP technologies\n3. Data Preprocessing - Data cleaning and transformation - Dimensionality reduction - Concept tree creation\n4. Knowledge Representation - Principles - Representing input and output knowledge - Knowledge visualization techniques\n5. Classification - Correlation analysis - Inference rules - Decision trees - Covering rules\n6. Midterm Exam\n7. Prediction - Introduction - Bayesian networks - Nearest neighbor methods - Linear models\n8. Clustering - Clustering methods - Hierarchical clustering methods - Concept-based clustering\n9. Real-world Data Mining - Preprocessing real-world data - Application of data mining techniques\n10. Guest Lecture - Application of data mining in real-world scenarios\n11. Review\n12. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practial exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/big_data_mining_additional_reading_materials": [
    {
      "text": "Primary Materials: - Jiawei Han (2020), Data Mining: Concepts and Techniques, 5th Edition, Morgan Kaufmann. - Aggarwal, Charu C (2015), Data Mining: The Textbook, Springer.\nReference Materials: - Nathan Marz (2015), Big Data: Principles and best practices of scalable realtime data systems, Manning Publications. - Trevor Hastie, et al, (2018), The Elements of Statistical Learning: Data Mining, Inference, and Prediction, 4th Edition, Springer."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_course_code": [
    {
      "text": "The course code of Java software development is xxFIT3JSD."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_prerequisite": [
    {
      "text": "No, Java software development doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_is_prerequisite_courses": [
    {
      "text": "No, Java software development isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Java software development is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_number_of_credits": [
    {
      "text": "Java software development is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_number_of_credit_hours": [
    {
      "text": "Java software development is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_course_type": [
    {
      "text": "Java software development is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Nguyen Xuan Thang, email: nxthang@hanu.edu.vn - MSc Nguyen Thuy Duong, email: duongnt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_objective_of_course": [
    {
      "text": "The objective of this course is to provide learners with knowledge related to the design and implementation of an application using the Java programming language. This will help learners develop skills such as building basic components of applications like interfaces, data management, and program structure organization. Additionally, learners will gain expertise in developing network applications and applications that utilize databases.\nKnowledge: - Differentiate between various popular Java application development platforms. - Explain the model and core components of a Java application. - Discuss the event-driven programming model and its application in Java application development.\nSkills: - Apply learned programming models and processes to develop a real-world Java application. - Program event-driven handling. - Build basic components of a Java application such as interfaces, data management, and program structure organization.\nAutonomy and Responsibility: - Demonstrate awareness and commitment to improving relevant specialized knowledge. - Work independently or in groups to complete assigned tasks."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Introduction to Java technology\n2. Object-Oriented Programming in Java\n3. Java Input/Output Programming\n4. Multithreading Programming\n5. GUI Programming: - Event-driven programming model - Layout, container, and menu programming - Adaptive listeners, drawing\n6. Network Application Programming\n7. Application Programming with Databases\n8. Tank 1990 Game Application\n9. Review\n10. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment, Group report, Paper exam/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper exam / Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/java_software_development_additional_reading_materials": [
    {
      "text": "Primary Materials: - Herbert Schildt (2021). Java: The complete reference, 12th Edition. McGraw Hill."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_course_code": [
    {
      "text": "The course code of Software Requirements Analysis is xxFIT3REQ."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_prerequisite": [
    {
      "text": "No, Software Requirements Analysis doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_is_prerequisite_courses": [
    {
      "text": "No, Software Requirements Analysis isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Software Requirements Analysis is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_number_of_credits": [
    {
      "text": "Software Requirements Analysis is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_number_of_credit_hours": [
    {
      "text": "Software Requirements Analysis is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_course_type": [
    {
      "text": "Software Requirements Analysis is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Dinh Tran Long email: longndt@hanu.edu.vn - MSc Nguyen Huu Cam, email: camnh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_objective_of_course": [
    {
      "text": "The objective of the course is to equip learners with fundamental knowledge of software requirements analysis and their practical applications. This helps learners understand and apply software requirements analysis techniques, evaluate, organize, and prioritize requirements based on their importance, and understand how to model and represent functional and non-functional requirements of software.\nKnowledge: - Present basic concepts of software requirements analysis such as understanding software requirements, organizing and prioritizing requirements, modeling and representing requirements, and searching, discovering, and inferring software requirements. - Differentiate between stages in the software requirements analysis process.\nSkills: - Analyze software requirements using use cases. - Represent software requirements in textual or model forms. - Compile software requirements specification documents.\nAutonomy and Responsibility: - Demonstrate awareness and commitment to enhancing specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Basic concepts of software engineering requirements\n2. Technical Process Requirements - Requirement inference - Technical characteristics - Analysis and management\n3. Classification of Requirements - Functional requirements - Non-functional requirements - Requirements for quality attributes\n4. Requirement Identification - Identifying needs, goals, and requirements - Customers and stakeholders - Interviews and observations\n5. Requirement Specification - Specification language - Technical specification - Specification documents\n6. Requirements Analysis - Verification check - Refinement - Detecting and resolving conflicts\n7. Midterm Exam\n8. Modeling - Goal modeling - Templates - Technical specifications\n9. Requirements for Typical Software Systems - Embedded systems - Web applications - Enterprise information systems\n10. Requirements Management - Traceability and tracking - Priority management - Supporting tools\n11. Negotiation of Requirements and Risk Management - Negotiation techniques\n12. Integrating Requirement Analysis and Software Process\n13. Review\n14. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment, Group report, Paper exam/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper exam / Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/software_requirements_analysis_additional_reading_materials": [
    {
      "text": "Primary Materials: - Pohl K. (2015), Requirements Engineering Fundamentals 2nd Edition, RockyNook Inc.\nReference Materials: - Hull E. & Jackson K. & Dick J. (2011), Requirements Engineering 3rd Edition, Springer Verlag. - Stephen J. Withall (2007), Software Requirement Patterns, Microsoft Press."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_course_code": [
    {
      "text": "The course code of Distributed Systems is xxFIT3DSY."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_prerequisite": [
    {
      "text": "No, Distributed Systems doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_is_prerequisite_courses": [
    {
      "text": "No, Distributed Systems isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Distributed Systems is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_number_of_credits": [
    {
      "text": "Distributed Systems is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_number_of_credit_hours": [
    {
      "text": "Distributed Systems is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_course_type": [
    {
      "text": "Distributed Systems is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Vu Minh Tuan, email: minhtuan_fit@hanu.edu.vn - MSc Dinh Thi Minh Nguyet, email: nguyetdtm@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_objective_of_course": [
    {
      "text": "The goal of this course is to equip learners with fundamental and core knowledge about modern distributed systems. This will enable learners to understand and apply the theory to: - Analyze and evaluate an existing modern distributed system. - Design and implement a simple distributed system.\nKnowledge: - Presented basic concepts of distributed systems. - Differentiated between models and operating principles of distributed systems. - Explained methods for designing specific distributed systems.\nSkills: - Represented the model of a specific distributed system. - Designed and implemented a simple distributed system.\nAutonomy and Responsibility: - Demonstrated awareness in leveraging the strengths of distributed systems in designing reasonable and effective solutions for real-world problems. - Shown a conscious effort to enhance specialized knowledge related to the course."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_course_structure": [
    {
      "text": "1. Chapter 1: Introduction to Distributed Systems - Course Introduction - Introduction to basic concepts and definitions - Characteristics, purposes, and challenges of distributed systems\n2. Chapter 2: Processes - Introduction - Threads and thread management - Client-Server model\n3. Chapter 3: Interprocess Communication - Introduction - Remote Procedure Call (RPC) - Message Passing\n4. Chapter 4: Naming - Introduction & Related Concepts - Name Analysis Process - Implementation of Name Spaces - Case-Study: DNS - Locating mobile entities\n5. Chapter 5: Consistency and Replication - Introduction - Replication - Data Consistency - Other Issues\n6. Midterm Exam\n7. Chapter 6: Fault Tolerance - Introduction - Recovery Process - Client-Server Communication and Reliable Group Communication - Distributed Commit\n8. Chapter 7: Security - Introduction - Forms of Attacks - Encryption and Authentication - Access Control - Digital Signatures\n9. Chapter 8: Distributed File Systems - Introduction - File System Model - Related Issues\n10. Chapter 9: Designing Distributed Systems: Google - Introduction - Overall Structure and Design Philosophy - Data Storage and Integration of Services - Distributed Computing Services\n11. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practical exam / Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/distributed_systems_additional_reading_materials": [
    {
      "text": "Primary Materials: - Maarten van Steen (2017), âDistributed Systemsâ, Digital version.\nReference Materials: - George Coulouris, Jean Dollimore and Tim Kindberg (2011), âDistributed Systems: Concepts and Designâ, Addison Wesley."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_course_code": [
    {
      "text": "The course code of Database management system is xxFIT3DBM."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_prerequisite": [
    {
      "text": "Yes, Database management system requires Database as a prerequisite."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_is_prerequisite_courses": [
    {
      "text": "No, Database management system isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Database management system is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_number_of_credits": [
    {
      "text": "Database management system is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_number_of_credit_hours": [
    {
      "text": "Database management system is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_course_type": [
    {
      "text": "Database management system is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_course_instructor_info": [
    {
      "text": "The instructors for this course are: - MSc Nguyen Huu Cam, email: camnh@hanu.edu.vn - MSc Nguyen Thuy Linh, email: linhnt@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_objective_of_course": [
    {
      "text": "This course provides students with principles of Database Management Systems (DBMS). It covers the usage of SQL programming language, definitions, and applications of stored procedures, error handling, and the use of pointers in data processing. The course also presents principles of data storage and management, including disk and file management, tree structures, and indexing, especially index on hash-based tables. Students will learn about access control management in DBMS, as well as principles of transaction management, access control management, concurrency control, and recovery after incidents.\nKnowledge: - Present fundamental knowledge about Database Management Systems. - Explain principles of data storage and indexing, as well as processing and optimizing queries. - Describe principles of transaction management and access control in Database Management Systems.\nSkills: - Manage storage and retrieve data on relational database management systems. - Detect and solve some technical issues in database management systems, such as transaction processing, concurrency control, and data recovery.\nSelf-Reliance and Responsibility: - Have a correct understanding of the role of data management in the Information Technology industry. - Demonstrate a positive attitude, eagerness to learn, and readiness to adapt to new technologies."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Overview of Database Management Systems (DBMS)\n2. Storage Organization and File Structure - Disk storage structure and file organization - File operations - Data hashing\n3. File Indexing Structure - Single-level indexing - Multi-level indexing\n4. Query Processing and Optimization - Transforming queries into relational algebra - Query execution - Query optimization techniques\n5. Midterm Exam\n6. Transaction Processing - Basic concepts - Transaction properties - Time stamping - Supporting operations in standard queries\n7. Concurrency Control - Basic concepts - Concurrency control techniques - Comparing techniques - Other issues\n8. Data Recovery - Basic concepts - Data recovery techniques - Data recovery in distributed database systems - Disaster recovery planning\n9. Thematic Lectures - Real-world implementation experience of a database management system - (Content prepared by invited speakers)\n10. Review Session\n11. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practical exam/ Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/database_management_system_additional_reading_materials": [
    {
      "text": "Primary Materials: - R. Elmasri, S. R. Navathe (2011), Fundamentals of Database Systems, 6th Edition, Pearson. - H. G. Molina, J. D. Ullman, J. Widom (2008), Database Systems: The Complete Book, 2nd Edition, Prentice-Hall.\nReference Materials: - Thomas Connolly, Carolyn Begg (2014), Database Systems: A Practical approach to Design, Implementation, and Management, 6th Edition, Pearson."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_course_code": [
    {
      "text": "The course code of Network performance evaluations is xxFIT4NPE."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_prerequisite": [
    {
      "text": "No, Network performance evaluations doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_is_prerequisite_courses": [
    {
      "text": "No, Network performance evaluations isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Network performance evaluations is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_number_of_credits": [
    {
      "text": "Network performance evaluations is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_number_of_credit_hours": [
    {
      "text": "Network performance evaluations is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_course_type": [
    {
      "text": "Network performance evaluations is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Phung Van Dong, email: dongpv@hanu.edu.vn - MSc Le Hoang Nam, email: namlh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_objective_of_course": [
    {
      "text": "The aim of this course is to equip learners with fundamental and in-depth knowledge of network performance measurement and evaluation, covering concepts, functions, models, processes, and implementation methods. The course will delve into measurement metrics and methods, providing insights into how to assess network performance. The objective is to empower learners with the skills to evaluate the performance of network systems and propose solutions to enhance system efficiency.\nKnowledge: - Articulate concepts related to network performance evaluation and various evaluation models. - Explain the characteristics of network architecture and corresponding methods for assessing network performance. - Describe the steps involved in the network performance evaluation process.\nSkills: - Develop a plan for assessing network performance. - Utilize appropriate models and tools for evaluating network performance. - Identify and resolve basic technical issues to improve network performance.\nIndependence and Responsibility: - Demonstrate a commitment to continuous improvement in relevant knowledge. - Take responsibility for planning and executing network performance evaluations."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_course_structure": [
    {
      "text": "1. Introduction to Network Performance Evaluation - Fundamental concepts - Models and performance assessment - Network architectures and characteristics\n2. Network Performance Measurement Parameters - Availability - Response time - Network utilization - Network throughput - Network bandwidth\n3. Methods of Network Performance Evaluation - Mathematical methods - Real-world measurement methods - Simulation methods\n4. Distributed Network Performance Evaluation Models - Queueing theory - Petri Nets - Simulation techniques\n5. Quality of Network Services - Introduction - Multi-service network state - Open-loop control - Closed-loop control - Simple service modeling approach\n6. Midterm Examination\n7. Introduction to NS2 Tool - Overview of NS2 - TclObject class - TclClass class - TclCommand class - InstVar classes\n8. Network Simulation with NS2 - Simulation initialization - Programming events and scheduling - Programming heaps - Programming queues - Real-time programming\n9. Simulation of Packet Transmission Process - Base node - Node methods - Links - Queue management and packet programming\n10. Protocol Development and Simulation Deployment - Steps in protocol development - Developing a simple protocol - Compiling and testing the protocol\n11. Advanced Principles and Techniques for Enhancing Network Performance - Principles for improving network performance - Techniques for overcoming bottlenecks - Methods to enhance data transmission speed - Measures to improve network reliability\n12. Review Session\n13. Final Examination"
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical assignment): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Practical exam/ Project): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/network_performance_evaluations_additional_reading_materials": [
    {
      "text": "Primary Materials: - Mor Harchol-Balter (2013), Performance Modeling and Design of Computer Systems: Queueing Theory in Action, Cambridge University Press. - Jean-Yves Le Boudec (2011), PERFORMANCE EVALUATION OF COMPUTER AND COMMUNICATION SYSTEMS, EPFL Press.\nReference Materials: - Issariyakul, Teerawat (2012), Introduction to Network Simulator NS2, Springer ."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_course_code": [
    {
      "text": "The course code of Image Processing and Recognition is xxFIT4IPR."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_prerequisite": [
    {
      "text": "No, Image Processing and Recognition doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_is_prerequisite_courses": [
    {
      "text": "No, Image Processing and Recognition isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Image Processing and Recognition is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_number_of_credits": [
    {
      "text": "Image Processing and Recognition is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_number_of_credit_hours": [
    {
      "text": "Image Processing and Recognition is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_course_type": [
    {
      "text": "Image Processing and Recognition is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Phung Van Dong, email: dongpv@hanu.edu.vn - PhD Ta Quang Hung, email: hta@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_objective_of_course": [
    {
      "text": "Equipping learners with fundamental knowledge to tackle common problems in digital image processing. This enables them to design and construct real-world applications related to image processing and recognition using professional programming languages.\nKnowledge: - Present basic concepts of digital images and the processes involved in creating them. - Differentiate between common techniques and applications in image processing and recognition. - Distinguish the primary problems encountered in image processing.\nSkills: - Implement image processing problems using a specific programming language. - Utilize professional image processing libraries in Python or Java. - Design and develop practical applications in the domain of image processing and recognition.\nAutonomy and Responsibility: - Demonstrate a conscious effort to enhance expertise related to the course. - Exhibit a positive attitude, eagerness to learn, and readiness to adopt new technologies."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_course_structure": [
    {
      "text": "1. Introduction - Digital signal and image processing - Applications and developmental trends in image processing and recognition\n2. Camera Model and Digital Image Representation - Camera models - Sampling and quantization - Digital image representation - Image reproduction - Digital image classification\n3. Image Enhancement - Principles - Processing methods in spatial domain - Processing methods in frequency domain\n4. Edge Detection Techniques - Principles - Gradient operators - Laplacian operators - Other methods\n5. Midterm Exam\n6. Image Segmentation - Principles - Thresholding and clustering methods - Histogram-based methods - Region-growing methods - Compression-based methods\n7. Image Compression - Principles - Traditional compression methods - Modern compression methods\n8. Pattern Recognition - Principles - Classification algorithms - Clustering algorithms - Other methods\n9. Guest Lecture - Topic: Practical Applications of Digital Image Processing and Recognition\n10. Review\n11. Final Exam"
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical assignment, Group report, Paper exam/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper exam/ Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/image_processing_and_recognition_additional_reading_materials": [
    {
      "text": "Primary Materials: - R. C. Gonzalez and R. E. Woods (2017), Digital Image Processing, 4th Edition. Pearson Publishers, USA.\nReference Materials: - F. Y. Shih (2010), Image Processing and Pattern Recognition: Fundamentals and Techniques, WILEY Publisher, USA."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_course_code": [
    {
      "text": "The course code of Machine learning and applications is xxFIT4MLA."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_prerequisite": [
    {
      "text": "No, Machine learning and applications doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_is_prerequisite_courses": [
    {
      "text": "No, Machine learning and applications isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Machine learning and applications is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_number_of_credits": [
    {
      "text": "Machine learning and applications is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_number_of_credit_hours": [
    {
      "text": "Machine learning and applications is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_course_type": [
    {
      "text": "Machine learning and applications is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Nguyen Xuan Thang, email: nxthang@hanu.edu.vn - MSc Bui Quoc Khanh email: khanhbp@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_objective_of_course": [
    {
      "text": "The objective of this course is to equip learners with fundamental knowledge of machine learning, various machine learning models, and essential problem-solving skills within the field of machine learning. This will enable learners to comprehend and apply machine learning techniques to solve specific real-world problems.\nKnowledge: - Present fundamental machine learning models, including supervised and unsupervised models. - Differentiate basic problems in machine learning such as linear and non-linear regression, classification, clustering, and dimensionality reduction. - Explain the principles of applying machine learning to address real-world problems.\nSkills: - Choose appropriate machine learning models and parameters to solve problems like image recognition, language identification, classification, and data processing. - Design and implement a machine learning system based on real-world requirements.\nSelf-Reliance and Responsibility: -  Demonstrate awareness of ongoing self-improvement in relevant knowledge associated with the course. -  Exhibit a positive attitude, eagerness to learn, and readiness to embrace new technologies."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_course_structure": [
    {
      "text": "1. Introduction - Introduction to the Course - Overview of Machine Learning - Development Trends and Applications\n2. Supervised Machine Learning - Principles - Regression and Single-Layer Neural Network (Perceptron) - Bayesian Networks - Support Vector Machines - Applications\n3. Unsupervised Machine Learning - Clustering Methods and K-means - Gaussian Methods - Principal Component Analysis - Independent Component Analysis - Applications\n4. Midterm Examination\n5. Reinforcement and Control Learning - Principles - Bellman Equation - Value Iteration and Policy Iteration - Linear Regression and Quadratic Regression - Approximating Value Functions\n6. Deep Learning - Introduction - Multi-Layer Neural Networks - Backpropagation in Neural Networks - Vectorization - Other Techniques\n7. Guest Lecture - Real-world Applications of Machine Learning\n8. Review\n9. Final Examination"
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Practical assignment, Group report, Paper exam/ Multiple choice questions): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Paper exam/ Multiple choice questions): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/machine_learning_and_applications_additional_reading_materials": [
    {
      "text": "Primary Materials: - Tom M. Mitchell (2015), Machine Learning, McGraw Hill Education.\nReference Materials: - Trevor Hastie and Robert Tibshirani (2015), The Elements of Statistical Learning: Data Mining, Inference, and Prediction, Springer. - Yaser S. Abu-Mostafa, et al (2012), Learning From Data: A short course, AMLBook. - Christopher M.  (2010), Pattern Recognition and Machine Learning, 2nd Edition, Springer."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_course_code": [
    {
      "text": "The course code of Advanced topics in information technology is xxFIT4ATI."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_prerequisite": [
    {
      "text": "No, Advanced topics in information technology doesn't require any prerequisites."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_is_prerequisite_courses": [
    {
      "text": "No, Advanced topics in information technology isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Advanced topics in information technology is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_number_of_credits": [
    {
      "text": "Advanced topics in information technology is equivalent to 3 credits."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_number_of_credit_hours": [
    {
      "text": "Advanced topics in information technology is delivered over 150 credit hours, comprising 30 hours of theoretical instruction, 30 hours of practical application, and 90 hours designated for self-study."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_course_type": [
    {
      "text": "Advanced topics in information technology is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_course_instructor_info": [
    {
      "text": "The instructors for this course are: - PhD Nguyen Xuan Thang, email: nxthang@hanu.edu.vn - MSc Le Hoang Nam, email: namlh@hanu.edu.vn"
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_objective_of_course": [
    {
      "text": "This course introduces selected and advanced topics in modern information technology and communication. The content of the course is related to conducting an overview, analysis, and evaluation of technological solutions, techniques, and in-depth theories in a specific area within the field of information technology and communication. Practical issues related to real-world scenarios are presented as topics and discussed throughout the learning process. The specific content of the course varies depending on the chosen focus area, which may include artificial intelligence, big data processing, the Internet of Things, cybersecurity, or applying information and communication technology to address existing real-world problems. The aim of the course is to equip learners with advanced knowledge in the selected topic. This enables learners to understand and apply suitable technological solutions and techniques to solve specific real-world problems.\nKnowledge: - Present fundamental and advanced knowledge on the chosen topic. - Differentiate and explain issues and technological solutions related to the chosen topic.\nSkills: - Practically choose and apply suitable solutions to solve real-world problems. - Demonstrate soft skills such as teamwork, presentation, academic discussion, and critique.\nIndependence and Responsibility: - Consciously enhance expertise related to the course. - Exhibit self-awareness in learning and honesty in examinations."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_course_structure": [
    {
      "text": "1. Introduction - Introduction to the course - Overview of the selected topic - Development trends and applications\n2. Group Work (Stage 1) - Collaborative activities and initial group work discussions\n3. Midterm Report - Submission of midterm progress report\n4. Group Work (Stage 2) - Continued group collaboration and project development\n5. Results Presentation - Presentation of final outcomes and findings"
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_teaching_and_learning_methods_and_activities": [
    {
      "text": "Lecturer: - Present the content of the knowledge. - Analyze and evaluate the knowledge. - Connect and systematize the knowledge. - Answer students' questions. - Assign homework. - Grade homework. - Summarize and evaluate. - Facilitate group formation. - Provide topic suggestions. - Supervise group activities. - Advising on selecting a situation/problem for research - Providing materials and guidance on finding reference materials and collecting data - Advising on research methods - Providing comments, evaluations, and conclusions.\nStudents: - Listen to lectures, answer questions from the lecturer. - Take notes. - Complete practice exercises. - Do assignments as required by the lecturer. - Present the results. - Engage in group activities. - Choose a project topic. - Present the group's results. - Approaching the situation, posing the problem - Collecting, processing, and analyzing documents and linguistic data - Formulating questions, seeking advisor opinions - Debating, researching, proposing solutions - Reporting the results."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_subject_assessment_methods": [
    {
      "text": "Attendance Assessment: - Attendance, checking the results of assigned learning tasks. - Weight: 10%\nRegular Assessment: - Midterm Exam (Weekly assignment, Group report): Assessing acquired knowledge and skills. - Weight: 30%\nEnd-of-Course Assessment: - Final Exam (Final group report): Evaluating accumulated knowledge and skills. - Weight: 60%"
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Demonstrate a commitment to research, pre-read materials before class. - Establish a timetable, distribute study time effectively. - Participate actively in class activities, focus on listening to lectures, take notes, practice, and engage in self-directed learning. - Synthesize core knowledge, summarize, and systematize the learned material. - Efficiently collaborate in group work, participate in team activities. - Actively engage in discussions with teachers and peers. - Self-study following the guidance provided by the lecturer."
    }
  ],
  "utter_ask_education_program_information_technology/advanced_topics_in_information_technology_additional_reading_materials": [
    {
      "text": "Primary Materials: - The course instructor will provide comprehensive materials and resources for each specific topic covered.\nReference Materials: - The course instructor will provide comprehensive materials and resources for each specific topic covered."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_course_code": [
    {
      "text": "The course code of Industry Internship is xxFIT4IIN."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_prerequisite": [
    {
      "text": "Yes, Industry Internship requires students comple 7 semesters."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_is_prerequisite_courses": [
    {
      "text": "No, Industry Internship isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Industry Internship is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_number_of_credits": [
    {
      "text": "Industry Internship is equivalent to 4 credits."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_number_of_credit_hours": [
    {
      "text": "Industry Internship is delivered over 360 hours of interning at the facility."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_course_type": [
    {
      "text": "Industry Internship is a mandatory course."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_course_instructor_info": [
    {
      "text": "Instructors guide internships assigned by the department."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_objective_of_course": [
    {
      "text": "The primary objectives of this course are to equip students with knowledge and skills related to the work process, job positions, and domain-specific expertise in the field of Information Technology during their internship. Throughout the course, learners will develop analytical, explanatory, and argumentative skills, applying their acquired knowledge to solve real-world problems encountered during their internship. The course also focuses on enhancing communication, collaboration, and teamwork skills, enabling students to understand the corporate culture and effective work methods within an organization.\nKnowledge: - Explain the workflow, roles, functions, and responsibilities associated with various job positions at the internship site. - Describe distinctive features of the organizational culture and effective work methods at the internship location.\nSkills: - Apply learned concepts to solve practical problems encountered during the internship. - Plan and manage tasks effectively, ensuring timely completion and achieving desired outcomes. - Practice soft skills, including teamwork, discussion, and presentation.\nAutonomy and Responsibility: - Develop an understanding of the role and responsibilities of employees within an organization. - Cultivate a serious, ethical attitude and adhere to appropriate conduct standards during the internship. - Demonstrate honesty, self-awareness, enthusiasm, and proactiveness in completing assigned tasks."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_course_structure": [
    {
      "text": "Depending on the student's internship facility"
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_teaching_and_learning_methods_and_activities": [
    {
      "text": "Student Learning Activities: - Students will undertake internships at the internship facilities recommended by the department. If students independently contact internship facilities, approval from the department is required. - Students will complete registration, contact internship facilities, and participate in interview sessions for internship selection according to the department's plan and guidance. - During the internship, students will actively participate in the activities of the internship facility. They will be supervised by the guiding lecturer and carry out assigned tasks from the internship facility.\nTeaching Activities of Instructors: - Instructors will monitor, supervise, and support students during their internship at the internship facility. - Collaborate with the internship facility to assess the student's internship process. "
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_subject_assessment_methods": [
    {
      "text": "- The internship facility's evaluation of the student's internship process according to the form provided by the faculty - Weight: 60%.\n- Internship report of the student according to the form provided by the faculty - Weight: 40%"
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Adhering to the department's and internship supervisor's requirements. - Complying with the regulations and rules of the internship facility."
    }
  ],
  "utter_ask_education_program_information_technology/industry_internship_additional_reading_materials": [
    {
      "text": "Facility's meterials"
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_course_code": [
    {
      "text": "The course code of Graduation thesis is xxFIT4GRA."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_prerequisite": [
    {
      "text": "Yes, Graduation thesis requires students' GPA is above 3.2."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_is_prerequisite_courses": [
    {
      "text": "No, Graduation thesis isn't a prerequisite course."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_name_of_unit_in_charge_of_teaching": [
    {
      "text": "The unit in charge of teaching Graduation thesis is Faculty of Information Technology."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_number_of_credits": [
    {
      "text": "Graduation thesis is equivalent to 6 credits."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_number_of_credit_hours": [
    {
      "text": "Graduation thesis is delivered over 300 hours of completing the thesis."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_course_type": [
    {
      "text": "Graduation thesis is a optional course."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_course_instructor_info": [
    {
      "text": "Instructors guide internships assigned by the department."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_objective_of_course": [
    {
      "text": "The learner conducts a scientific research or a specific project in the fields of Software Engineering, Computer Networks and Communications, Information Systems, under the guidance of a supervisor.\nThe objective of the course is to develop the learner's skills in drafting research proposals, identifying problems, proposing solutions, collecting and analyzing data to validate solutions, and writing and presenting scientific reports in the form of a thesis.\nKnowledge: - Systematize the accumulated knowledge throughout the learning process to carry out the graduation thesis - scientific research topic, especially the specialized knowledge. - Understand the approach to scientific research and the process of conducting a scientific research topic. - Present and explain the specialized issues related to the research topic of the thesis.\nSkills: - 1: Apply knowledge and skills to perform the thesis from literature analysis, writing a proposal, gathering information, analyzing data, writing, and presenting scientific reports. - 2: Develop the capacity for scientific thinking and reasoning in solving problems posed in the thesis. - 3: Practice planning and managing tasks to complete assignments on time and effectively. - 4: Practice soft skills such as analysis, discussion, academic critique, and presentation.\nAutonomy and Responsibility: - Develop a serious, standardized, and objective attitude during the scientific research and thesis implementation. - Be conscious of continuously improving specialized knowledge related to the topic. - Be self-aware, honest, and have a critical perspective when analyzing, evaluating, and critiquing opinions and content related to the topic."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_course_structure": [
    {
      "text": "No struture"
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_teaching_and_learning_methods_and_activities": [
    {
      "text": "Teaching activities of the instructor: - Guide learners on research methods, topic selection, planning, and result evaluation.\nLearning activities of the learners: - Conduct the assigned research topic under the guidance of the instructor."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_subject_assessment_methods": [
    {
      "text": "Bachelor's thesis and related products will be developed under the guidance of the University and the Department. The thesis will be evaluated by the assigned instructor and two other faculty members according to the Department's regulations. - Weight: 100%"
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_duties_of_the_learner": [
    {
      "text": "Learner's Responsibilities: - Adherence to the requirements of the department and the supervising instructor."
    }
  ],
  "utter_ask_education_program_information_technology/graduation_thesis_additional_reading_materials": [
    {
      "text": "You must find out yourself."
    }
  ]
}